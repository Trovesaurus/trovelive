Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	LayerGroups = 
	{
		"$LOCAL$/PoppedCorn",
	};
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(2.7989120e+000, 2.5785098e+000, 6.8411589e+000);
	EulerOrientation = float3(-1.6709112e+001, 2.1482990e+001, 0.0000000e+000);
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Kernals",
		"$LOCAL$/Shockwave",
		"$LOCAL$/Spakles",
		"$LOCAL$/DustToGround",
		"$LOCAL$/DustToCenter",
		"$LOCAL$/Gradient",
		"$LOCAL$/DustTop",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/_Backdrop_Model3D",
		"$LOCAL$/_Backdrop_Light",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CNEdEditorBackdrop_Model3D	$LOCAL$/_Backdrop_Model3D
{
	EditorInfosPosition = int2(-252, -371);
	LayerName = "Layer_Model";
	ResourceModel = "meshes/cuberoom_default.fbx";
}
CNEdEditorLightFactory	$LOCAL$/_Backdrop_Light_Factory
{
	NearClipPlane = 1.0000000e+002;
	Fov = 1.1154704e+002;
	LightSize = 9.9999998e-003;
	SpotFalloff = 8.8541701e-002;
	Magnitude = 1.0000000e+005;
}
CNEdEditorBackdrop_Light	$LOCAL$/_Backdrop_Light
{
	LayerName = "GlobalLight";
	Position = float3(1.1233553e+002, 2.8270447e+002, 2.2297581e+002);
	EulerOrientation = float3(-4.8550171e+001, 2.6739031e+001, -9.5600376e-007);
	LightFactory = "$LOCAL$/_Backdrop_Light_Factory";
	LightDistance = 3.7717276e+002;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		1.4226681e-001,
		5.0070828e-001,
		8.1806362e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.1568625e-001,
		9.8039216e-001,
		3.9215768e-003,
		7.6078427e-001,
		9.0196079e-001,
		2.7450984e-002,
		1.0000000e+000,
		8.5098040e-001,
		0.0000000e+000,
		9.0196079e-001,
		5.7254905e-001,
		2.3529384e-002,
		1.0000000e+000,
		2.4705887e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/PoppedCorn
{
	Descriptor = "$LOCAL$/CParticleDescriptor_673D414E";
	ContinuousSpawner = false;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_673D414E
{
	Renderer = "$LOCAL$/CParticleRenderer_List_455B9223";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_A33BCCA0",
		"$LOCAL$/CParticleFieldDeclaration_6A3A1727",
		"$LOCAL$/CParticleFieldDeclaration_6128E19F",
		"$LOCAL$/CParticleFieldDeclaration_C39BD2E2",
	};
	VirtualParentFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_91391B2F",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_FE973329";
	States = 
	{
		"$LOCAL$/CParticleState_C39BD2E2",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FE973329
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.2;
	Velocity = float3(0,0, length(parent.Velocity)*5);
	Color = float4(1.0);
	Roation = rand(pi,-pi);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A33BCCA0
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_E71217E3
{
	DrawOrder = 3;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_explosion_02.dds";
}
CParticleState	$LOCAL$/CParticleState_C39BD2E2
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_B0AD9A4D",
		"$LOCAL$/CParticleEvolver_Script_61980DD4",
		"$LOCAL$/Field_3",
		"$LOCAL$/Script_2",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B0AD9A4D
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -9.0000000e+000, 0.0000000e+000);
	Drag = 5.0000000e+000;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Kernals
{
	Descriptor = "$LOCAL$/CParticleDescriptor_D724F094";
	SpawnCount = 4.0000000e+001;
	ContinuousSpawner = false;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_D724F094
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_34FEFE31";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_D6CD3E36",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_E2381FBC",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_2921F74A",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7";
	States = 
	{
		"$LOCAL$/CParticleState_B1F27048",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7
{
	Expression = "function void	Eval()
{
	Life = rand(0.15,0.2);
	Size = 0.09;
	Position = Shape_1.samplePosition();
	Velocity = (float3(1,0.4,1)*Position)*rand(10,15);
	Color = float4(1.0);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D6CD3E36
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_34FEFE31
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_dot_01.dds";
}
CParticleState	$LOCAL$/CParticleState_B1F27048
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_7A7E30AB",
		"$LOCAL$/Script_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_7A7E30AB
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -7.0000000e+000, 0.0000000e+000);
	Drag = 2.0000000e+000;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_2921F74A
{
	SamplerName = "Shape_1";
	Shape = "$LOCAL$/CShapeDescriptor_7D2AE2D5";
	SampleDimensionality = Volume;
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_7D2AE2D5
{
	Position = float3(0.0000000e+000, 7.8225243e-001, 0.0000000e+000);
	ShapeType = CAPSULE;
	Radius = 2.5000000e-001;
	Height = 1.0000000e+000;
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_E2381FBC
{
	EventName = "OnDeath";
	EventAction = "$LOCAL$/PoppedCorn";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_91391B2F
{
	FieldName = "Velocity";
	FieldType = float3;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Shockwave
{
	Descriptor = "$LOCAL$/CParticleDescriptor_405E321E";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_405E321E
{
	Renderer = "$LOCAL$/CParticleRenderer_List_FC594FDF";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_7C2F92F0",
		"$LOCAL$/CParticleFieldDeclaration_526C1DE4",
		"$LOCAL$/CParticleFieldDeclaration_D3686077",
		"$LOCAL$/CParticleFieldDeclaration_67E9E988",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39";
	States = 
	{
		"$LOCAL$/CParticleState_2C0DE2B2",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39
{
	Expression = "function void	Eval()
{
	Life = 0.250;
	Size = 1;
	Position = float3(0,0.05,0);
	Color = float4(1.0);
	Axis = float3(1,0,0);
	AxisUp = float3(0,1,0);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7C2F92F0
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_87A33473
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	BillboardMode = PlanarAlignedQuad;
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleState	$LOCAL$/CParticleState_2C0DE2B2
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_F78DFE5D",
		"$LOCAL$/Field_1",
		"$LOCAL$/CParticleEvolver_Script_214F4271",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_F78DFE5D
{
	CustomName = "Physics";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_526C1DE4
{
	FieldName = "Axis";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D3686077
{
	FieldName = "AxisUp";
	FieldType = float3;
}
CParticleEvolver_Field	$LOCAL$/Field_1
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_0F98BD06";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_0F98BD06
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		8.0727339e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		4.0188513e+000,
		8.0630150e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Spakles
{
	Descriptor = "$LOCAL$/CParticleDescriptor_A06DFD41";
	SpawnCount = 5.0000000e+001;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_A06DFD41
{
	Renderer = "$LOCAL$/CParticleRenderer_List_D971DF69";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_DE35433B",
		"$LOCAL$/CParticleFieldDeclaration_6D355315",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_3BE17EEE",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_AE4ED498";
	States = 
	{
		"$LOCAL$/CParticleState_42820CE5",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_AE4ED498
{
	Expression = "function void	Eval()
{
	Life = rand(1,2);
	Size = 0.2;
	Position = Shape_2.samplePosition();
	Velocity = (float3(4,0.5,4)*Position)*rand(6,8);
	Color = float4(1.0);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DE35433B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_DE16351A
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_brightSpark_01.dds";
}
CParticleState	$LOCAL$/CParticleState_42820CE5
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_FC3A8B0C",
		"$LOCAL$/CParticleEvolver_Script_D697968A",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_FC3A8B0C
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, 0.0000000e+000);
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_4BFB40BF
{
	Position = float3(0.0000000e+000, 7.8225243e-001, 0.0000000e+000);
	ShapeType = CAPSULE;
	Radius = 1.0000000e-001;
	Height = 5.0000000e-001;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_3BE17EEE
{
	SamplerName = "Shape_2";
	Shape = "$LOCAL$/CShapeDescriptor_4BFB40BF";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_82EB7149
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_BF87D540";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_43F47D03",
		"$LOCAL$/CParticleFieldDeclaration_673D414E",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_39ED8E82",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_E2390734";
	States = 
	{
		"$LOCAL$/CParticleState_6067DC07",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_BF87D540
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend_Soft;
	Diffuse = "Textures/VFX_Smoke_steampunk_dragon_fb2x2_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	SoftAnimationBlending = true;
	BillboardMode = VelocityAxisAligned;
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_43F47D03
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_39ED8E82
{
	SamplerName = "Shape_2";
	Shape = "$LOCAL$/CShapeDescriptor_DF5E2E6D";
	SampleDimensionality = Volume;
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_DF5E2E6D
{
	Position = float3(0.0000000e+000, 7.8225243e-001, 0.0000000e+000);
	ShapeType = CAPSULE;
	Radius = 3.0000001e-001;
	Height = 1.0000000e+000;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E2390734
{
	Expression = "function void	Eval()
{
	Life = rand(0.5,1);
	Size = 0.2;
	Position = Shape_2.samplePosition();
	Velocity = (float3(1,0,1)*Position)*rand(30,50);
	Color = float4(1.0);
}
";
}
CParticleState	$LOCAL$/CParticleState_6067DC07
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_5ED917D6",
		"$LOCAL$/Evolver_1",
		"$LOCAL$/Field_2",
		"$LOCAL$/CParticleEvolver_Script_9F37396F",
		"$LOCAL$/Field_4",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_5ED917D6
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -1.0000000e+000, 0.0000000e+000);
	Drag = 2.0000000e+000;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/DustToGround
{
	Delay = 1.0000000e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_82EB7149";
	SpawnCount = 6.0000000e+001;
}
CParticleEvolver_FlipBook	$LOCAL$/Evolver_1
{
	CustomName = "FlipBook";
	LastFrameID = 3;
}
CParticleEvolver_Field	$LOCAL$/Field_2
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_3ADC27BE";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_3ADC27BE
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		1.0053334e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		3.6133749e+000,
		6.0285163e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_2D43E259
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_D1719390";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_0D36F193",
		"$LOCAL$/CParticleFieldDeclaration_455E4505",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_2DBFD652",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_22A8AC84";
	States = 
	{
		"$LOCAL$/CParticleState_D122C397",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_D1719390
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend_Soft;
	Diffuse = "Textures/VFX_Smoke_steampunk_dragon_fb2x2_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	SoftAnimationBlending = true;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0D36F193
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_2DBFD652
{
	SamplerName = "Shape_2";
	Shape = "$LOCAL$/CShapeDescriptor_C0872A7D";
	SampleDimensionality = Volume;
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_C0872A7D
{
	Position = float3(0.0000000e+000, 7.8225243e-001, 0.0000000e+000);
	ShapeType = CAPSULE;
	Radius = 1.0000000e-001;
	Height = 1.0000000e+000;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_22A8AC84
{
	Expression = "function void	Eval()
{
	Life = rand(1,2);
	Size = 0.2;
	Position = Shape_2.samplePosition();
	Velocity = (float3((1-Position.y)*15,1,(1-Position.y)*15)*Position)*rand(1,6);
	Color = float4(1.0);
	Rotation = rand(-pi,pi);
}
";
}
CParticleState	$LOCAL$/CParticleState_D122C397
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_B1834EA6",
		"$LOCAL$/CParticleEvolver_FlipBook_019D1F61",
		"$LOCAL$/CParticleEvolver_Field_BD5D9138",
		"$LOCAL$/CParticleEvolver_Script_012E6879",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B1834EA6
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 1.0000000e-001, 0.0000000e+000);
	Drag = 1.5000000e+000;
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_019D1F61
{
	CustomName = "FlipBook";
	LastFrameID = 3;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_BD5D9138
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_12F66C5B";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_12F66C5B
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		1.0053334e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		3.6133749e+000,
		6.0285163e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/DustToCenter
{
	Descriptor = "$LOCAL$/CParticleDescriptor_2D43E259";
	SpawnCount = 1.0000000e+002;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_455E4505
{
	FieldName = "Rotation";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_675115AC
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_09.dds";
	BillboardMode = PlanarAlignedQuad;
	ColorField = "Color2";
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_FC594FDF
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_87A33473",
		"$LOCAL$/CParticleRenderer_Billboard_675115AC",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_2A232C8E
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	ColorField = "Color2";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_D971DF69
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_DE16351A",
		"$LOCAL$/CParticleRenderer_Billboard_2A232C8E",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_93D9CDE0
{
	DrawOrder = 1;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	SizeField = "Size2";
	ColorField = "Color2";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_455B9223
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_E71217E3",
		"$LOCAL$/CParticleRenderer_Billboard_93D9CDE0",
	};
}
CParticleEvolver_Script	$LOCAL$/Script_1
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_27C9BA22";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_27C9BA22
{
	Expression = "
function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,1,0.9);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,LifeRatio);//ColorCoeff;
	Color = ColorOut *1.5;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6E31F28D
{
	Expression = "
function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.4,0.9);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	Color = ColorOut *1.5;
	Color2 = ColorOut *2;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_61980DD4
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_6E31F28D";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6A3A1727
{
	FieldName = "Color2";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_684C6176
{
	Expression = "
function void	Eval()
{
	float Offset = 0;
	float Scale = 0.25;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	Color = ColorOut *1.5;
	Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_214F4271
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_684C6176";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_67E9E988
{
	FieldName = "Color2";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_0BE282EB
{
	Expression = "
function void	Eval()
{
	float Offset = 0.1;
	float Scale = 0.95;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	Color = ColorOut *1.5;
	Color2 = ColorOut *0.5;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_D697968A
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_0BE282EB";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6D355315
{
	FieldName = "Color2";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E81F34FC
{
	Expression = "
function void	Eval()
{
	float Offset = 0;
	float Scale = 0.1;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.6,1);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	Color = ColorOut *1.5;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_9F37396F
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E81F34FC";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D24B8D5E
{
	Expression = "
function void	Eval()
{
	float Offset = 0.1;
	float Scale = 0.25;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.4,1);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	Color = ColorOut ;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_012E6879
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D24B8D5E";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_B66D8430
{
	Renderer = "$LOCAL$/CParticleRenderer_List_4F135EB3";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_EEA42B24",
		"$LOCAL$/CParticleFieldDeclaration_14F47181",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_48A03DD8";
	States = 
	{
		"$LOCAL$/CParticleState_CD02457B",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_4F135EB3
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_F81039F2",
		"$LOCAL$/CParticleRenderer_Billboard_4647869D",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_F81039F2
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	ColorField = "Color2";
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_4647869D
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_09.dds";
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_EEA42B24
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_14F47181
{
	FieldName = "Color2";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_48A03DD8
{
	Expression = "function void	Eval()
{
	Life = 0.250;
	Size = 1;
	Position = float3(0,0.05,0);
	Color = float4(1.0);
	
}
";
}
CParticleState	$LOCAL$/CParticleState_CD02457B
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_FBCA445A",
		"$LOCAL$/CParticleEvolver_Field_DF73AD25",
		"$LOCAL$/CParticleEvolver_Script_474B0EFF",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_FBCA445A
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_DF73AD25
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_A080904C";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_A080904C
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		5.1632094e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		4.0188513e+000,
		4.2561860e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_474B0EFF
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A7AA4A2E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A7AA4A2E
{
	Expression = "
function void	Eval()
{
	float Offset = 0;
	float Scale = 0.25;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	Color = ColorOut *1.5;
	Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Gradient
{
	Descriptor = "$LOCAL$/CParticleDescriptor_B66D8430";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_673D414E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
		"$LOCAL$/CParticleFieldDeclaration_E71217E3",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_C39BD2E2",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_D724F094";
	States = 
	{
		"$LOCAL$/CParticleState_9A4350E7",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_673D414E
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend_Soft;
	Diffuse = "Textures/VFX_Smoke_steampunk_dragon_fb2x2_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	SoftAnimationBlending = true;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E71217E3
{
	FieldName = "Rotation";
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_C39BD2E2
{
	SamplerName = "Shape_2";
	Shape = "$LOCAL$/CShapeDescriptor_B0AD9A4D";
	SampleDimensionality = Volume;
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_B0AD9A4D
{
	Position = float3(0.0000000e+000, 1.9582763e+000, 0.0000000e+000);
	ShapeType = CYLINDER;
	Radius = 5.0000000e-001;
	Height = 1.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D724F094
{
	Expression = "function void	Eval()
{
	Life = rand(1,2);
	Size = 0.2;
	Position = Shape_2.samplePosition();
	Velocity = float3(0,1,0)*rand(0,2);
	Color = float4(1.0);
	Rotation = rand(-pi,pi);
}
";
}
CParticleState	$LOCAL$/CParticleState_9A4350E7
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_D6CD3E36",
		"$LOCAL$/CParticleEvolver_FlipBook_34FEFE31",
		"$LOCAL$/CParticleEvolver_Field_B1F27048",
		"$LOCAL$/CParticleEvolver_Script_2921F74A",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_D6CD3E36
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 1.0000000e-001, 0.0000000e+000);
	Drag = 1.5000000e+000;
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_34FEFE31
{
	CustomName = "FlipBook";
	LastFrameID = 3;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_B1F27048
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_7A7E30AB";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_7A7E30AB
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		1.0053334e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		3.6133749e+000,
		6.0285163e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_2921F74A
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5
{
	Expression = "
function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.25;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.6,1);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	Color = ColorOut *1.5;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/DustTop
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
	SpawnCount = 1.0000000e+001;
}
CParticleEvolver_Field	$LOCAL$/Field_3
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_91391B2F";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_91391B2F
{
	Times = 
	{
		0.0000000e+000,
		1.1555556e-001,
		8.8277775e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		9.9875867e-001,
		9.8698413e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		6.3575460e-003,
		9.7135600e-004,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6128E19F
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_673D414E
{
	FieldName = "Alpha";
}
CParticleEvolver_Field	$LOCAL$/Field_4
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_FE973329";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_FE973329
{
	Times = 
	{
		0.0000000e+000,
		1.8000001e-001,
		6.6111112e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		9.8620689e-001,
		9.8620689e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/Script_2
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	Size2 = Size *4*(1-LifeRatio);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C39BD2E2
{
	FieldName = "Roation";
}
