Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(2.8654923e+000, 2.1318502e+000, 1.1300319e+000);
	EulerOrientation = float3(-2.5795898e+001, -6.4931891e+002, 0.0000000e+000);
	Duration = 1.0000000e+000;
	PostFx_EnableGlow = false;
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/BottomSpot",
		"$LOCAL$/MidSpot",
		"$LOCAL$/TopSpot",
		"$LOCAL$/Layer_1",
		"$LOCAL$/Layer_2",
		"$LOCAL$/Layer_3",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_2D1CF2EC",
		"$LOCAL$/CParticleAttributeDeclaration_86D4F747",
		"$LOCAL$/CParticleAttributeDeclaration_F01456F4",
		"$LOCAL$/CParticleAttributeDeclaration_577986C7",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/CNEdEditorBackdrop_Model3D_64DB7210",
	};
	IsSceneLayers3DExpanded = true;
}
CNEdEditorBackdrop_Model3D	$LOCAL$/CNEdEditorBackdrop_Model3D_64DB7210
{
	Position = float3(0.0000000e+000, -8.5000002e-001, 0.0000000e+000);
	ResourceModel = "Meshes/vfx_character_pc_neonNinja_ability_decoy_character_01.fbx";
	IsActive = false;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_2D1CF2EC
{
	AttributeName = "KillAllOnDespawn";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_86D4F747
{
	AttributeName = "Lifespan";
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_F01456F4
{
	AttributeName = "SizeMult";
	DefaultValueF4 = float4(1.0000000e+000, 1.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	DefaultValueI4 = int4(1, 0, 0, 0);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(2.0000000e+000, 2.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(2, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_577986C7
{
	AttributeName = "SizeMult2";
	DefaultValueF4 = float4(6.0000002e-001, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(2.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/MidSpot
{
	Descriptor = "$LOCAL$/CParticleDescriptor_B1F27048";
	Infinite = true;
	SpawnCount = 8.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_B1F27048
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_7D2AE2D5";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2921F74A",
		"$LOCAL$/CParticleFieldDeclaration_C0872A7D",
		"$LOCAL$/CParticleFieldDeclaration_673D414E",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_7A7E30AB";
	States = 
	{
		"$LOCAL$/CParticleState_E2381FBC",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7A7E30AB
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.1;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%8);
	Ptnum /= 7;
	Position = float3(((Ptnum)-0.5)*0.75,(sin((Ptnum)*pi)*0.2)+0.15,0);
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2921F74A
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_7D2AE2D5
{
	DrawOrder = 1;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	AxisField = "Axis";
	AxisScale = 3.0000001e-001;
}
CParticleState	$LOCAL$/CParticleState_E2381FBC
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_91391B2F",
		"$LOCAL$/CParticleEvolver_Script_E71217E3",
		"$LOCAL$/LocalSpace_5",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_91391B2F
{
	Active = false;
	CustomName = "Physics";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_405E321E
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_876F8C39";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_7C2F92F0",
		"$LOCAL$/CParticleFieldDeclaration_2DBFD652",
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_87A33473";
	States = 
	{
		"$LOCAL$/CParticleState_2C0DE2B2",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_876F8C39
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	VFlipUVs = true;
	AxisField = "Axis";
	AxisScale = 7.5000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7C2F92F0
{
	FieldName = "Color";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_87A33473
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.2;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%8);
	Ptnum /= 7;
	Position = float3(((Ptnum)-0.5),(sin((Ptnum)*pi)*0.3)+0.25,0);
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
}
";
}
CParticleState	$LOCAL$/CParticleState_2C0DE2B2
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_F78DFE5D",
		"$LOCAL$/CParticleEvolver_Script_673D414E",
		"$LOCAL$/LocalSpace_4",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_F78DFE5D
{
	Active = false;
	CustomName = "Physics";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/TopSpot
{
	Descriptor = "$LOCAL$/CParticleDescriptor_405E321E";
	Infinite = true;
	SpawnCount = 8.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_9EA582F5
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_AF99325C";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_BCF0524F",
		"$LOCAL$/CParticleFieldDeclaration_22A8AC84",
		"$LOCAL$/CParticleFieldDeclaration_6128E19F",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_3ADC27BE";
	States = 
	{
		"$LOCAL$/CParticleState_2D43E259",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_AF99325C
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	VFlipUVs = true;
	AxisField = "Axis";
	AxisScale = 2.5000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_BCF0524F
{
	FieldName = "Color";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_3ADC27BE
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.1;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%8);
	Ptnum /= 7;
	Position = float3(((Ptnum)-0.5)*0.5,(sin((Ptnum)*pi)*0.2)+0.05,0);
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
	
}
";
}
CParticleState	$LOCAL$/CParticleState_2D43E259
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_D1719390",
		"$LOCAL$/CParticleEvolver_Script_B0AD9A4D",
		"$LOCAL$/LocalSpace_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_D1719390
{
	Active = false;
	CustomName = "Physics";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/BottomSpot
{
	Descriptor = "$LOCAL$/CParticleDescriptor_9EA582F5";
	Infinite = true;
	DurationInSeconds = 5.0000000e+000;
	SpawnCount = 8.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2DBFD652
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C0872A7D
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_22A8AC84
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6128E19F
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 1;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*5;
	float3 RGB = Curve_1.sample((cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_673D414E
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_6128E19F";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*8;
	float3 RGB = Curve_1.sample((1-cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,5);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,0.5);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E71217E3
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale =0.2;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*20;
	float3 RGB = Curve_1.sample((cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2 );
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,0.75);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_B0AD9A4D
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_1
{
	CustomName = "Localspace";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_4
{
	CustomName = "Localspace";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_5
{
	CustomName = "Localspace";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6128E19F
{
	FieldName = "Ptnum";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_673D414E
{
	FieldName = "Ptnum";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Ptnum";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_673D414E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_A33BCCA0",
		"$LOCAL$/CParticleFieldDeclaration_E71217E3",
		"$LOCAL$/CParticleFieldDeclaration_C39BD2E2",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_B0AD9A4D";
	States = 
	{
		"$LOCAL$/CParticleState_D724F094",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_673D414E
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	VFlipUVs = true;
	AxisField = "Axis";
	AxisScale = 2.5000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A33BCCA0
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E71217E3
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C39BD2E2
{
	FieldName = "Ptnum";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B0AD9A4D
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.1;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%5);
	Ptnum /= 4;
	Ptnum *=0.5;
	Position = float3(0,(sin((Ptnum)*pi)*0.35),((Ptnum)-0.5));
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
}
";
}
CParticleState	$LOCAL$/CParticleState_D724F094
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_9A4350E7",
		"$LOCAL$/CParticleEvolver_Script_D6CD3E36",
		"$LOCAL$/CParticleEvolver_Localspace_B1F27048",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_9A4350E7
{
	Active = false;
	CustomName = "Physics";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_D6CD3E36
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_34FEFE31";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_34FEFE31
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale =0.2;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*20;
	float3 RGB = Curve_1.sample((cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2 );
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,0.75);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_B1F27048
{
	CustomName = "Localspace";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
	Infinite = true;
	DurationInSeconds = 5.0000000e+000;
	SpawnCount = 5.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_2921F74A
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_E2381FBC";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_91391B2F",
		"$LOCAL$/CParticleFieldDeclaration_405E321E",
		"$LOCAL$/CParticleFieldDeclaration_876F8C39",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0";
	States = 
	{
		"$LOCAL$/CParticleState_87A33473",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_E2381FBC
{
	DrawOrder = 1;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	AxisField = "Axis";
	AxisScale = 3.0000001e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_91391B2F
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_405E321E
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_876F8C39
{
	FieldName = "Ptnum";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.1;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%5);
	Ptnum /= 4;
	Ptnum *=0.5;
	Position = float3(0,(sin((Ptnum)*pi)*0.4)+0.1,((Ptnum)-0.5));
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
}
";
}
CParticleState	$LOCAL$/CParticleState_87A33473
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_2C0DE2B2",
		"$LOCAL$/CParticleEvolver_Script_F78DFE5D",
		"$LOCAL$/CParticleEvolver_Localspace_D3686077",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_2C0DE2B2
{
	Active = false;
	CustomName = "Physics";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_F78DFE5D
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_526C1DE4";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_526C1DE4
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*8;
	float3 RGB = Curve_1.sample((1-cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,5);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,0.5);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_D3686077
{
	CustomName = "Localspace";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_2
{
	Descriptor = "$LOCAL$/CParticleDescriptor_2921F74A";
	Infinite = true;
	SpawnCount = 5.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_A06DFD41
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_AE4ED498";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_DE35433B",
		"$LOCAL$/CParticleFieldDeclaration_DE16351A",
		"$LOCAL$/CParticleFieldDeclaration_42820CE5",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_FC3A8B0C";
	States = 
	{
		"$LOCAL$/CParticleState_4BFB40BF",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_AE4ED498
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	BillboardMode = VelocityAxisAligned;
	VFlipUVs = true;
	AxisField = "Axis";
	AxisScale = 7.5000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DE35433B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DE16351A
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_42820CE5
{
	FieldName = "Ptnum";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FC3A8B0C
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.2;
	Color = float4(1.0);
	Ptnum = (spawner.EmittedCount%5);
	Ptnum /= 4;
	Ptnum *=0.5;
	Position = float3(0,(sin((Ptnum)*pi)*0.5)+0.1,((Ptnum)-0.75));
	Position = rotate(Position, float3(1,0,0), pi*-0.25);
	Axis = normalize(Position);
}
";
}
CParticleState	$LOCAL$/CParticleState_4BFB40BF
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_3BE17EEE",
		"$LOCAL$/CParticleEvolver_Script_82EB7149",
		"$LOCAL$/CParticleEvolver_Localspace_43F47D03",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_3BE17EEE
{
	Active = false;
	CustomName = "Physics";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_82EB7149
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_BF87D540";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_BF87D540
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 1;
	float cursor =abs(((Ptnum)-0.5))*(scene.Time%1)*5;
	float3 RGB = Curve_1.sample((cursor*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_43F47D03
{
	CustomName = "Localspace";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_3
{
	Descriptor = "$LOCAL$/CParticleDescriptor_A06DFD41";
	Infinite = true;
	SpawnCount = 5.0000000e+000;
}
