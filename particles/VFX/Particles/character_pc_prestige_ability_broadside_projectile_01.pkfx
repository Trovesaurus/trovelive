Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(-3.6934354e+000, 1.4739206e+000, 2.6074595e+000);
	EulerOrientation = float3(-1.9943119e+001, -5.8597267e+001, 0.0000000e+000);
	PostFx_EnableGlow = false;
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Smoke_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6643E6E7";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 3.0000000e+001;
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Fire_Projectile_1",
		"$LOCAL$/Fire_Center_1",
		"$LOCAL$/Gradient_Center_Trail_1",
		"$LOCAL$/Smoke_1",
		"$LOCAL$/Embers_3",
	};
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_86135BE4
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D6617677";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FA351F52
{
	FieldName = "ColorCoeff";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5511A77D
{
	Expression = "function void	Eval()

{
	Life = 0.5;
	Size = 0.7;
//	Velocity = float3(0,0,9);
	
}";
}
CParticleState	$LOCAL$/CParticleState_0D966D84
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_48D31897",
		"$LOCAL$/CParticleEvolver_Field_011FC7A6",
		"$LOCAL$/CParticleEvolver_Field_69DD0238",
		"$LOCAL$/CParticleEvolver_Field_75E1058E",
		"$LOCAL$/CParticleEvolver_Script_04B0ADBA",
		"$LOCAL$/CParticleEvolver_Script_B0AD9A4D",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D6617677
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_511AA04C",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_48D31897
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_011FC7A6
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_A7C68C61";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2768D693
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2C40C45D
{
	FieldName = "ColorCoeff";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_A7C68C61
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.5665411e-001,
		7.5000000e-001,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		2.8536129e-001,
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_69DD0238
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_ADC2315B";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Embers_3
{
	Descriptor = "$LOCAL$/CParticleDescriptor_5470CA03";
	Infinite = true;
	SpawnCount = 1.0000000e+001;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_A6346F59
{
	Renderer = "$LOCAL$/CParticleRenderer_Ribbon_9B058A38";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2768D693",
		"$LOCAL$/CParticleFieldDeclaration_FA351F52",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_5511A77D";
	States = 
	{
		"$LOCAL$/CParticleState_0D966D84",
	};
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_80DC8B06
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_FBF6E341";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_ADC2315B
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.4999999e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-7.6412535e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_04B0ADBA
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E79BA205";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E79BA205
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Gradient_Center_Trail_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_A6346F59";
	Infinite = true;
	SpawnCount = 1.0000000e+001;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_E24430F0
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_2CE52A73";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_13A82C69
{
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		6.4998996e-001,
		1.4999999e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_FBF6E341
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0000000e+000,
		5.0000000e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E763E6AB
{
	Expression = "function void	Eval()
{
	Life = rand(0.65,0.8);
	Size = rand(0.1,0.4);
	Position = float3(rand(-1,1),rand(-1,1),rand(-1,1)) * 0.15;
	Rotation = rand(-pi,pi);
	ScalarRotationSpeed = rand(-0.5,0.5);
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_75E1058E
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_13A82C69";
}
CParticleState	$LOCAL$/CParticleState_3E7EE54A
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_743368D5",
		"$LOCAL$/CParticleEvolver_FlipBook_F8081DBC",
		"$LOCAL$/CParticleEvolver_Rotation_5929F12F",
		"$LOCAL$/CParticleEvolver_Field_9A14C01E",
		"$LOCAL$/CParticleEvolver_Field_80DC8B06",
		"$LOCAL$/CParticleEvolver_Field_E24430F0",
		"$LOCAL$/CParticleEvolver_Script_86135BE4",
		"$LOCAL$/CParticleEvolver_Script_9A4350E7",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_39EE8C36
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_smokecloud_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftAnimationBlending = true;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D0F36431
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_743368D5
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 1.0000000e+000, 0.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Sampler_0";
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_F8081DBC
{
	CustomName = "FlipBook";
	LastFrameID = 15;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_5929F12F
{
	CustomName = "Rotation";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_F72BCE48
{
	SamplerName = "Sampler_0";
	Strength = 1.7677669e-001;
	Wavelength = 1.0000000e+000;
	Octaves = 1;
	Gain = 1.0000000e+000;
	TimeScale = 5.0000000e-001;
	FastFakeFlow = true;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_A7023239
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		2.1599644e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.8273674e-001,
		2.5807390e-001,
		0.0000000e+000,
		0.0000000e+000,
		6.3424930e-002,
		-2.1870732e-003,
		0.0000000e+000,
		3.4999999e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		3.4999999e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		3.7315825e-001,
		-7.4297436e-002,
		0.0000000e+000,
		0.0000000e+000,
		1.2489184e-002,
		-2.6967785e-001,
		0.0000000e+000,
		0.0000000e+000,
		4.5332063e-002,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_9A14C01E
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_A7023239";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_FD6D605E
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_92359834
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_4E8FA627";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2F0F084E",
		"$LOCAL$/CParticleFieldDeclaration_8A183DD9",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_F4BDE31B",
		"$LOCAL$/CParticleSamplerShape_3B912172",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_5A100B7C";
	States = 
	{
		"$LOCAL$/CParticleState_57776C4F",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_4E8FA627
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_01.dds";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2F0F084E
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8A183DD9
{
	FieldName = "ColorCoeff";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Fire_Center_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_92359834";
	Infinite = true;
	SpawnCount = 1.0000000e+002;
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_F4BDE31B
{
	SamplerName = "Sampler_0";
	Strength = 1.2727922e-001;
	Wavelength = 6.0000002e-001;
	Octaves = 1;
	Interpolator = Quintic;
	TimeScale = 5.0000000e-001;
	FlowFactor = 1.7500000e+000;
	DivergenceFactor = 5.0000000e-001;
	FastFakeFlow = true;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_3B912172
{
	SamplerName = "Sampler_1";
	Shape = "$LOCAL$/CShapeDescriptor_3EAB826D";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_3EAB826D
{
	ShapeType = SPHERE;
	Radius = 1.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5A100B7C
{
	Expression = "function void     Eval()



{

	Life = rand(0.2, 0.3);

	Size = 0.25;

	Position = Sampler_1.samplePosition();

}



";
}
CParticleState	$LOCAL$/CParticleState_57776C4F
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_F77255D6",
		"$LOCAL$/CParticleEvolver_Field_7A1E7541",
		"$LOCAL$/CParticleEvolver_Field_1DD815C3",
		"$LOCAL$/CParticleEvolver_Script_1A8B8A55",
		"$LOCAL$/CParticleEvolver_Field_05EDF377",
		"$LOCAL$/CParticleEvolver_Script_E71217E3",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_F77255D6
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 2.2500000e+000, 0.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Sampler_0";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7A1E7541
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_08B38300";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_08B38300
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.5000001e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_1DD815C3
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_4DAF297A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_4DAF297A
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_1A8B8A55
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_604193C4";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_604193C4
{
	Expression = "function void	Eval()


{


	Color *= ColorCoeff;


}


";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_05EDF377
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_FD6D605E";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_511AA04C
{
	AttributeName = "EmissionRate";
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_98A71D51
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_2CE52A73
{
	Times = 
	{
		0.0000000e+000,
		4.8729751e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		6.9639468e-001,
		3.4381759e-001,
		4.4639462e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_F02C934B
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_E188BE6A";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_F347A875",
		"$LOCAL$/CParticleFieldDeclaration_59AB85DC",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_42A47F3E",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_ECF2CF10";
	States = 
	{
		"$LOCAL$/CParticleState_A76B1313",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_E188BE6A
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_01.dds";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F347A875
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_59AB85DC
{
	FieldName = "ColorCoeff";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6643E6E7
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_39EE8C36";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_D0F36431",
		"$LOCAL$/CParticleFieldDeclaration_2C40C45D",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_F72BCE48",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_E763E6AB";
	States = 
	{
		"$LOCAL$/CParticleState_3E7EE54A",
	};
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_42A47F3E
{
	SamplerName = "Sampler_1";
	Shape = "$LOCAL$/CShapeDescriptor_E37F4FD9";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_E37F4FD9
{
	ShapeType = SPHERE;
	Radius = 5.0000001e-002;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_ECF2CF10
{
	Expression = "function void     Eval()

{

	Life = rand(0.5, 0.75);

	Size = 0.25;

	Position = Sampler_1.samplePosition();

}";
}
CParticleState	$LOCAL$/CParticleState_A76B1313
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_AF8DD5D2",
		"$LOCAL$/CParticleEvolver_Field_58E55FFD",
		"$LOCAL$/CParticleEvolver_Field_2DD96D17",
		"$LOCAL$/CParticleEvolver_Script_CEAF9CE1",
		"$LOCAL$/CParticleEvolver_Field_CF551DDB",
		"$LOCAL$/CParticleEvolver_Localspace_846C092C",
		"$LOCAL$/CParticleEvolver_Script_FE973329",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_AF8DD5D2
{
	CustomName = "Physics";
	Drag = 1.0000000e+000;
	WorldInteractionMode = OneWay;
	DieOnContact = true;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_58E55FFD
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_0E205004";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_0E205004
{
	Times = 
	{
		0.0000000e+000,
		1.7333335e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		2.7621850e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_2DD96D17
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_F7427626";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_F7427626
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_CEAF9CE1
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_8DFB1CB8";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_8DFB1CB8
{
	Expression = "function void	Eval()


{


	Color *= ColorCoeff;


}


";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_CF551DDB
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_2D8FD43A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_2D8FD43A
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Fire_Projectile_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_F02C934B";
	Infinite = true;
	SpawnCount = 2.0000000e+001;
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_846C092C
{
	CustomName = "Localspace";
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_DF0908BE
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, 2.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Sampler_0";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_5ED6C097
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_90188FA6";
}
CParticleState	$LOCAL$/CParticleState_4A756F4F
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_DF0908BE",
		"$LOCAL$/CParticleEvolver_Rotation_44C8FE93",
		"$LOCAL$/CParticleEvolver_Damper_BD846752",
		"$LOCAL$/CParticleEvolver_Script_4F6E8F7D",
		"$LOCAL$/CParticleEvolver_Field_5ED6C097",
		"$LOCAL$/CParticleEvolver_Script_34FEFE31",
	};
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_8260BFEA
{
	SamplerName = "Shape_0";
	Shape = "$LOCAL$/CShapeDescriptor_4C9707F5";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_90188FA6
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		2.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleRenderer_Ribbon	$LOCAL$/CParticleRenderer_Ribbon_9B058A38
{
	DrawOrder = 1;
	CustomName = "Ribbon";
	Diffuse = "Textures/vfx_gradient_03.dds";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_A64A2ECB
{
	SamplerName = "Sampler_0";
	Strength = 1.7677670e+000;
	Octaves = 1;
	Gain = 1.0000000e+000;
	TimeScale = 5.0000000e-001;
	FastFakeFlow = true;
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_4F6E8F7D
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_FF417584";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FF417584
{
	Expression = "function void	Eval()

{
	Color *= ColorCoeff;
	Color2 = Color * float4(1,1,1,0.025);
}";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_03C95F82
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_DA8DD36D",
		"$LOCAL$/CParticleRenderer_Billboard_409F1034",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_DA8DD36D
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_debris_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	BillboardMode = VelocityAxisAligned;
	AxisScale = 5.0000001e-002;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_409F1034
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03.dds";
	SizeField = "Size2";
	ColorField = "Color2";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C1521907
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_99C198D6
{
	FieldName = "Size2";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_4C9707F5
{
	Position = float3(0.0000000e+000, 1.0000000e-001, 0.0000000e+000);
	ShapeType = SPHERE;
	Radius = 5.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D4F69B5C
{
	Expression = "function void	Eval()

{
	Life = rand(1,2);
	Size = rand(0.02, 0.04);
	Size2 = Size * 10;
	Velocity = float3(rand(-0.25,0.25),rand(-0.25,0.25),rand(-0.25,0.25)) * rand(12,16);
	ScalarRotationSpeed = rand(-1,1);
	Position = Shape_0.samplePosition();
}";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_44C8FE93
{
	CustomName = "Rotation";
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_BD846752
{
	CustomName = "Damper";
	MinSpeed = 5.0000000e-001;
	ExpDampingTime = 5.5000000e+000;
	FieldToDampen = "Velocity";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_5470CA03
{
	Renderer = "$LOCAL$/CParticleRenderer_List_03C95F82";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_C1521907",
		"$LOCAL$/CParticleFieldDeclaration_99C198D6",
		"$LOCAL$/CParticleFieldDeclaration_98A71D51",
		"$LOCAL$/CParticleFieldDeclaration_213F6DE8",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_A64A2ECB",
		"$LOCAL$/CParticleSamplerShape_8260BFEA",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_D4F69B5C";
	States = 
	{
		"$LOCAL$/CParticleState_4A756F4F",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_213F6DE8
{
	FieldName = "ColorCoeff";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FE973329
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((1-LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E71217E3
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_B0AD9A4D
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D724F094
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_9A4350E7
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D724F094";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((1-LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_34FEFE31
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36";
}
