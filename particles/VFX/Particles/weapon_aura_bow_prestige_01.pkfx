Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(-1.6520567e+000, 1.7451236e+000, -9.4285214e-001);
	EulerOrientation = float3(-3.8269138e+001, 2.2653421e+002, 0.0000000e+000);
	PostFx_EnableGlow = false;
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/TopGlow",
		"$LOCAL$/Layer_1",
		"$LOCAL$/Layer_2",
		"$LOCAL$/Layer_3",
	};
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/CNEdEditorBackdrop_Effect_5EC4972C",
	};
	IsBackgroundLayers2DExpanded = true;
	IsSceneLayers3DExpanded = true;
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_D121F1C0",
		"$LOCAL$/CParticleAttributeDeclaration_8535FE91",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_D121F1C0
{
	AttributeName = "WidthControl";
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CNEdEditorBackdrop_Effect	$LOCAL$/CNEdEditorBackdrop_Effect_5EC4972C
{
	ResourceEffect = "Particles/TEST_Bow_Aura.pkfx";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_8535FE91
{
	AttributeName = "KillAllOnDespawn";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/TopGlow
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 5.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_A33BCCA0";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
		"$LOCAL$/CParticleFieldDeclaration_6128E19F",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
	States = 
	{
		"$LOCAL$/CParticleState_E71217E3",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.09;
	//Velocity = scene.axisUp();
	Color = float4(1.0);
	Position = float3(0,0,0);
	Axis = float3(0,1,0);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_A33BCCA0
{
	CustomName = "Billboard";
	BillboardingMaterial = Additive_Soft;
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	SoftnessDistance = 1.0000000e-001;
	BillboardMode = VelocityAxisAligned;
	AxisField = "Axis";
	AxisScale = 2.0000000e+000;
}
CParticleState	$LOCAL$/CParticleState_E71217E3
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_C39BD2E2",
		"$LOCAL$/Field_1",
		"$LOCAL$/CParticleEvolver_Script_A33BCCA0",
		"$LOCAL$/LocalSpace_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_C39BD2E2
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/Field_1
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_B0AD9A4D";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_B0AD9A4D
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		7.2571081e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.1452799e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FE973329
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.75,1 * LifeRatio);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_A33BCCA0
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_FE973329";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_1
{
	CustomName = "Localspace";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6128E19F
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_673D414E";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 2.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_673D414E
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_C39BD2E2";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_E71217E3",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_F78DFE5D",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
	States = 
	{
		"$LOCAL$/CParticleState_B0AD9A4D",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.04;
	Position = float3(0,0.2,0);
	Color = float4(1.0);
	Velocity = vrand(-0.4,0.4);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E71217E3
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_C39BD2E2
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_flare_03.dds";
	BillboardMode = VelocityAxisAligned;
	AxisScale = 1.0000000e+000;
}
CParticleState	$LOCAL$/CParticleState_B0AD9A4D
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_D724F094",
		"$LOCAL$/CParticleEvolver_Script_D6CD3E36",
		"$LOCAL$/Field_2",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_D724F094
{
	CustomName = "Physics";
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Turb_1";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7
{
	Expression = "function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_D6CD3E36
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7";
}
CParticleEvolver_Field	$LOCAL$/Field_2
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_34FEFE31";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_34FEFE31
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.9825788e-002,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-2.8718075e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_B1F27048
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_7A7E30AB";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2921F74A",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_526C1DE4",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5";
	States = 
	{
		"$LOCAL$/CParticleState_E2381FBC",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_7A7E30AB
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_flare_03.dds";
	BillboardMode = VelocityAxisAligned;
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2921F74A
{
	FieldName = "Color";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.04;
	Position = float3(0,-0.2,0);
	Color = float4(1.0);
	Velocity = vrand(-0.4,0.4);
}
";
}
CParticleState	$LOCAL$/CParticleState_E2381FBC
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_91391B2F",
		"$LOCAL$/CParticleEvolver_Script_405E321E",
		"$LOCAL$/CParticleEvolver_Field_7C2F92F0",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_91391B2F
{
	CustomName = "Physics";
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Turb_2";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_405E321E
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39
{
	Expression = "function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7C2F92F0
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_87A33473";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_87A33473
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.9825788e-002,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-2.8718075e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_2
{
	Descriptor = "$LOCAL$/CParticleDescriptor_B1F27048";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 2.0000000e+000;
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_F78DFE5D
{
	SamplerName = "Turb_1";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_526C1DE4
{
	SamplerName = "Turb_2";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_D3686077
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_0F98BD06";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_A06DFD41",
		"$LOCAL$/CParticleFieldDeclaration_AE4ED498",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_DE35433B";
	States = 
	{
		"$LOCAL$/CParticleState_DE16351A",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_0F98BD06
{
	CustomName = "Billboard";
	BillboardingMaterial = Additive_Soft;
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	SoftnessDistance = 1.0000000e-001;
	BillboardMode = VelocityAxisAligned;
	AxisField = "Axis";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A06DFD41
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_AE4ED498
{
	FieldName = "Axis";
	FieldType = float3;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_DE35433B
{
	Expression = "function void	Eval()
{
	Life = 1.0;
	Size = 0.09;
	//Velocity = scene.axisUp();
	Color = float4(1.0);
	Position = float3(0,0,0);
	Axis = float3(0,1,0);
}
";
}
CParticleState	$LOCAL$/CParticleState_DE16351A
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_42820CE5",
		"$LOCAL$/CParticleEvolver_Field_FC3A8B0C",
		"$LOCAL$/CParticleEvolver_Script_3BE17EEE",
		"$LOCAL$/CParticleEvolver_Localspace_BF87D540",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_42820CE5
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_FC3A8B0C
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_4BFB40BF";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_4BFB40BF
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		5.7121283e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.1452799e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_3BE17EEE
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_82EB7149";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_82EB7149
{
	Expression = "function void	Eval()
{
	float Offset = 0.1;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.75,1 * LifeRatio);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1-LifeRatio);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_BF87D540
{
	CustomName = "Localspace";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_3
{
	Descriptor = "$LOCAL$/CParticleDescriptor_D3686077";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 5.0000000e+000;
}
