Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(8.7851971e-001, 7.2307175e-001, 4.8167887e-001);
	EulerOrientation = float3(-2.6949999e+001, 5.9135967e+001, 0.0000000e+000);
	CaptureFrameEnd = 50;
	PostFx_EnableGlow = false;
	Backdrops = "$LOCAL$/_BackdropList";
	ShowTimeline = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Light_Top",
		"$LOCAL$/ringsFront",
		"$LOCAL$/Feathers",
		"$LOCAL$/Layer_1",
		"$LOCAL$/Layer_2",
		"$LOCAL$/Layer_4",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_2124B15A",
		"$LOCAL$/CParticleAttributeDeclaration_B446C1F9",
		"$LOCAL$/CParticleAttributeDeclaration_9A4350E7",
		"$LOCAL$/CParticleAttributeDeclaration_D6CD3E36",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CNEdEditorBackdrop_Model3D	$LOCAL$/_Backdrop_Model3D
{
	EditorInfosPosition = int2(-252, -371);
	LayerName = "Layer_Model";
	ResourceModel = "meshes/cuberoom_default.fbx";
}
CNEdEditorLightFactory	$LOCAL$/_Backdrop_Light_Factory
{
	NearClipPlane = 1.0000000e+002;
	LightSize = 9.9999998e-003;
	SpotFalloff = 8.8541701e-002;
	Magnitude = 1.0000000e+005;
}
CNEdEditorBackdrop_Light	$LOCAL$/_Backdrop_Light
{
	LayerName = "GlobalLight";
	Position = float3(1.1488137e+002, 2.8527716e+002, 2.1835413e+002);
	EulerOrientation = float3(-4.9248184e+001, 2.7519573e+001, -2.2448494e-001);
	LightFactory = "$LOCAL$/_Backdrop_Light_Factory";
	LightDistance = 3.7717276e+002;
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/_Backdrop_Model3D",
		"$LOCAL$/_Backdrop_Light",
	};
	Backdrops3DToSpawn = 
	{
		"$LOCAL$/CNEdEditorBackdrop_Effect_56CBBE7B",
	};
	IsBackdrops3DToSpawnExpanded = true;
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CNEdEditorBackdrop_Effect	$LOCAL$/CNEdEditorBackdrop_Effect_56CBBE7B
{
	LayerName = "Effect_1";
	ResourceEffect = "Particles/character_wings_water_left_01.pkfx";
	IsActive = false;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_2124B15A
{
	AttributeName = "KillAllOnDespawn";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_E7D47FFE
{
	Renderer = "$LOCAL$/CParticleRenderer_List_E23AFF99";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_CD441A92",
		"$LOCAL$/CParticleFieldDeclaration_A33BCCA0",
		"$LOCAL$/CParticleFieldDeclaration_6128E19F",
		"$LOCAL$/CParticleFieldDeclaration_D6CD3E36",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_6C81BEE6",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_738834A1";
	States = 
	{
		"$LOCAL$/CParticleState_E5AFAF78",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_E23AFF99
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_881A14D3",
		"$LOCAL$/CParticleRenderer_Billboard_D6CD3E36",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_881A14D3
{
	DrawOrder = 6;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_ray_03b.dds";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_08.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = VelocitySpheroidalAlign;
	AxisField = "Axis";
	AxisScale = 4.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_CD441A92
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_6C81BEE6
{
	SamplerName = "Fire_Size";
	Times = 
	{
		0.0000000e+000,
		6.0028452e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		6.7203544e-002,
		1.9085591e-001,
		1.9348648e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		6.2303036e-001,
		9.8089557e-003,
		6.5315561e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		6.9910169e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		5.0275307e-003,
		4.4076598e-001,
		4.5078421e-001,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		7.1836370e-001,
		9.0624489e-002,
		3.9005414e-002,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_738834A1
{
	Expression = "function void	Eval()

{
	Life = rand(1,0.8);
	float x = 1*WingFlip;
	float y = rand(0.6,0.85);
	float z = 0.85;
	Axis = float3(x,y,z);
	//AxisStretch = Velocity;
	ScalarRotationSpeed = rand(-1,1);
	Position = float3(0.0,0.1,-0.03);
}";
}
CParticleState	$LOCAL$/CParticleState_E5AFAF78
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_E3C7C79B",
		"$LOCAL$/CParticleEvolver_Rotation_E6D53FEC",
		"$LOCAL$/CParticleEvolver_Script_17FFA71F",
		"$LOCAL$/CParticleEvolver_Localspace_B32DECA9",
		"$LOCAL$/Script_1",
		"$LOCAL$/Script_3",
		"$LOCAL$/Field_4",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_E3C7C79B
{
	CustomName = "Physics";
	Drag = 3.0000000e+000;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_E6D53FEC
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_17FFA71F
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_6F50B4CE";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6F50B4CE
{
	Expression = "function void	Eval()

{
	

	Size = 	Fire_Size.sample(LifeRatio,1);

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_B32DECA9
{
	CustomName = "Localspace";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Light_Top
{
	Descriptor = "$LOCAL$/CParticleDescriptor_E7D47FFE";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_B446C1F9
{
	AttributeName = "WingFlip";
	AttributeType = int;
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	DefaultValueI4 = int4(-1, 0, 0, 0);
	HasMin = true;
	HasMax = true;
	MinValueF4 = float4(-1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	MinValueI4 = int4(-1, 0, 0, 0);
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/Script_1
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 1;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9, Alpha*0.15);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	Color2 = ColorOut *0.25;
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A33BCCA0
{
	FieldName = "Alpha";
}
CParticleEvolver_Script	$LOCAL$/Script_3
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D724F094";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D724F094
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_9A4350E7
{
	AttributeName = "DebugValueColor";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_D6CD3E36
{
	AttributeName = "DebugValueColorActivation";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_7A7E30AB
{
	Renderer = "$LOCAL$/CParticleRenderer_List_2921F74A";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_91391B2F",
		"$LOCAL$/CParticleFieldDeclaration_405E321E",
		"$LOCAL$/CParticleFieldDeclaration_FC3A8B0C",
		"$LOCAL$/CParticleFieldDeclaration_4BFB40BF",
		"$LOCAL$/CParticleFieldDeclaration_31AFE3B8",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_876F8C39",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0";
	States = 
	{
		"$LOCAL$/CParticleState_87A33473",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_2921F74A
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_D3686077",
		"$LOCAL$/CParticleRenderer_Billboard_A06DFD41",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_91391B2F
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_405E321E
{
	FieldName = "Alpha";
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_876F8C39
{
	SamplerName = "Fire_Size";
	Times = 
	{
		0.0000000e+000,
		2.5277454e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		-1.2797840e-002,
		2.5318903e-001,
		2.5164193e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.3225506e-001,
		2.7795587e-002,
		8.2166389e-002,
		6.9007841e-003,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		2.5419128e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		7.8292191e-003,
		2.4042088e-001,
		2.5870454e-001,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		-1.9646684e-002,
		1.3012712e-002,
		3.8179886e-002,
		1.0625222e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0
{
	Expression = "function void	Eval()

{
	Life = rand(1.3,1.4);
	Velocity = float3(1.5*WingFlip,1.0,1.25);
	//AxisStretch = Velocity;
	ScalarRotationSpeed = rand(-1,1);
	Position = float3(0.0,0.1,-0.03);
	Axis = normalize(Velocity+ vrand(-0.25,0.25));
	AxisUp = cross(Position, Axis);
	Rotation = rand(-pi,pi);
}";
}
CParticleState	$LOCAL$/CParticleState_87A33473
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_2C0DE2B2",
		"$LOCAL$/CParticleEvolver_Rotation_F78DFE5D",
		"$LOCAL$/CParticleEvolver_Script_526C1DE4",
		"$LOCAL$/CParticleEvolver_Localspace_0F98BD06",
		"$LOCAL$/CParticleEvolver_Script_A06DFD41",
		"$LOCAL$/CParticleEvolver_Script_DE35433B",
		"$LOCAL$/Field_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_2C0DE2B2
{
	CustomName = "Physics";
	Drag = 5.0000000e-001;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_F78DFE5D
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_526C1DE4
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D3686077";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D3686077
{
	Expression = "function void	Eval()

{
	

	Size = 	Fire_Size.sample(LifeRatio,1);
	Size2 = Size *0.3;

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_0F98BD06
{
	CustomName = "Localspace";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_A06DFD41
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_AE4ED498";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_AE4ED498
{
	Expression = "function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,1,1);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	Color = ColorOut ;
	Color2 = ColorOut*0.5;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_DE35433B
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_DE16351A";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_DE16351A
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/ringsFront
{
	Descriptor = "$LOCAL$/CParticleDescriptor_7A7E30AB";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FC3A8B0C
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_4BFB40BF
{
	FieldName = "AxisUp";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_D3686077
{
	DrawOrder = 5;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_shadow_hunter_02shadowShroudSkin_circle_03_alpha.dds";
	SizeField = "Size2";
	ColorField = "Color2";
}
CParticleEvolver_Field	$LOCAL$/Field_1
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_0F98BD06";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_0F98BD06
{
	Times = 
	{
		0.0000000e+000,
		6.6186160e-002,
		8.1949580e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.0996969e-003,
		9.8141134e-001,
		9.6842253e-001,
		-8.1647187e-004,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		4.2885926e-002,
		-1.0559715e-002,
		-1.2018729e-001,
		-1.7712319e-001,
		-2.7972259e-002,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_A06DFD41
{
	DrawOrder = 4;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_09.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AxisUp";
	Axis2Field = "Axis";
	AxisScale = 1.0000000e+000;
}
CParticleEvolver_Field	$LOCAL$/Field_4
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_CD02457B";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_CD02457B
{
	Times = 
	{
		0.0000000e+000,
		1.4034134e-001,
		7.3071140e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		9.7703880e-001,
		9.6462768e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-1.0552912e-002,
		-4.4392642e-002,
		1.9288737e-002,
		8.7982733e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_31AFE3B8
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_List_673D414E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_E71217E3",
		"$LOCAL$/CParticleFieldDeclaration_C39BD2E2",
		"$LOCAL$/CParticleFieldDeclaration_F78DFE5D",
		"$LOCAL$/CParticleFieldDeclaration_526C1DE4",
		"$LOCAL$/CParticleFieldDeclaration_673D414E",
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
		"$LOCAL$/CParticleFieldDeclaration_34FEFE31",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerCurve_673D414E",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7";
	States = 
	{
		"$LOCAL$/CParticleState_D6CD3E36",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_673D414E
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_FE973329",
		"$LOCAL$/CParticleRenderer_Billboard_6128E19F",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_FE973329
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_09.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	VFlipUVs = true;
	SizeField = "Size2";
	ColorField = "Color2";
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E71217E3
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C39BD2E2
{
	FieldName = "Alpha";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_9A4350E7
{
	Expression = "function void	Eval()

{
	Life = 0.5;
	//Velocity = float3(rand(1,2)*WingFlip,1.0,rand(0.8,1.5));
	//AxisStretch = Velocity;
	float Pcount = (spawner.EmittedCount%10);
	ScalarRotationSpeed = rand(-1,1);
	Position = (float3(1*WingFlip,0.60,0.8) * ((Pcount/6)+0.2))+float3(0,0.1,0);
	Axis = normalize(lerp(float3(0,0,-1),float3(-0.1,0,0), Pcount/10));
	AxisUp = float3(0.5,1,0);
	
	Size = Curve_2.sample(Pcount/10);
	//Size = float2(Size.x, Size.y *1.5);
	Position -= float3(0,0,Size.y*0.4); 
	//Position += Axis*(Size.x*0.5);
	
	
}";
}
CParticleState	$LOCAL$/CParticleState_D6CD3E36
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_34FEFE31",
		"$LOCAL$/CParticleEvolver_Rotation_B1F27048",
		"$LOCAL$/CParticleEvolver_Script_7A7E30AB",
		"$LOCAL$/CParticleEvolver_Localspace_7D2AE2D5",
		"$LOCAL$/CParticleEvolver_Script_E2381FBC",
		"$LOCAL$/CParticleEvolver_Script_405E321E",
		"$LOCAL$/CParticleEvolver_Field_7C2F92F0",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_34FEFE31
{
	CustomName = "Physics";
	Drag = 3.0000000e+000;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_B1F27048
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_7A7E30AB
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_2921F74A";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_2921F74A
{
	Expression = "function void	Eval()

{
	

	Size2 = float2(Size.x*0.75,Size.y*1.1);
	Rotation = -1 * Rotation;

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_7D2AE2D5
{
	CustomName = "Localspace";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E2381FBC
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_91391B2F";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_91391B2F
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((0*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	RGB = Curve_1.sample((0.25)+0.25);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,1,2);
	RGB = hsv2rgb(RGB);
	ColorOut = float4(RGB,1);
	Color2 = ColorOut;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_405E321E
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_876F8C39
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7C2F92F0
{
	CustomName = "Field";
	Name = "Rotation";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_87A33473";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_87A33473
{
	Times = 
	{
		0.0000000e+000,
		1.5450469e-001,
		3.7953526e-001,
		8.0612242e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		5.0032371e-001,
		7.7572089e-001,
		4.9916065e-001,
		3.0511531e-001,
		5.0032365e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.3293078e-002,
		1.3587806e-001,
		-4.5089605e-001,
		2.5486970e-002,
		5.3860277e-002,
		2.4478702e-002,
		1.8465789e-002,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Feathers
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F78DFE5D
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_526C1DE4
{
	FieldName = "AxisUp";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_D3686077
{
	Renderer = "$LOCAL$/CParticleRenderer_List_0F98BD06";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_DE35433B",
		"$LOCAL$/CParticleFieldDeclaration_DE16351A",
		"$LOCAL$/CParticleFieldDeclaration_9A4350E7",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_42820CE5",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_FC3A8B0C";
	States = 
	{
		"$LOCAL$/CParticleState_4BFB40BF",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_0F98BD06
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_AE4ED498",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_AE4ED498
{
	DrawOrder = 6;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_ray_03b.dds";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_08.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = VelocitySpheroidalAlign;
	AxisField = "Axis";
	AxisScale = 3.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DE35433B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DE16351A
{
	FieldName = "Alpha";
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_42820CE5
{
	SamplerName = "Fire_Size";
	Times = 
	{
		0.0000000e+000,
		6.2245482e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		6.5138638e-002,
		2.5486800e-001,
		2.5749859e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-1.9987609e-002,
		1.0171230e-002,
		6.1692819e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		6.3433444e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		7.5234413e-002,
		5.6756467e-001,
		5.7758307e-001,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		2.7114177e-002,
		8.2228720e-002,
		4.7401182e-002,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FC3A8B0C
{
	Expression = "function void	Eval()

{
	Life = rand(1,0.8);
	float x = 1*WingFlip;
	float y = rand(0.15,0.3);
	float z = -0.3;
	Axis = float3(x,y,z);
	//AxisStretch = Velocity;
	ScalarRotationSpeed = rand(-1,1);
	Position = float3(0.0,0.1,-0.03);
}";
}
CParticleState	$LOCAL$/CParticleState_4BFB40BF
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_3BE17EEE",
		"$LOCAL$/CParticleEvolver_Rotation_82EB7149",
		"$LOCAL$/CParticleEvolver_Script_BF87D540",
		"$LOCAL$/CParticleEvolver_Localspace_39ED8E82",
		"$LOCAL$/CParticleEvolver_Script_DF5E2E6D",
		"$LOCAL$/CParticleEvolver_Script_6067DC07",
		"$LOCAL$/CParticleEvolver_Field_22C50851",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_3BE17EEE
{
	CustomName = "Physics";
	Drag = 3.0000000e+000;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_82EB7149
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_BF87D540
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_43F47D03";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_43F47D03
{
	Expression = "function void	Eval()

{
	

	Size = 	Fire_Size.sample(LifeRatio,1);

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_39ED8E82
{
	CustomName = "Localspace";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_DF5E2E6D
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E2390734";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E2390734
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 1;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9, Alpha*0.15);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_6067DC07
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_5ED917D6";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5ED917D6
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_22C50851
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_346E34E8";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_346E34E8
{
	Times = 
	{
		0.0000000e+000,
		5.1363099e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		9.9943364e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		2.4825549e-002,
		2.3507884e-002,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_D3686077";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_31C28EEA
{
	Renderer = "$LOCAL$/CParticleRenderer_List_9EA582F5";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_3ADC27BE",
		"$LOCAL$/CParticleFieldDeclaration_2D43E259",
		"$LOCAL$/CParticleFieldDeclaration_D1719390",
		"$LOCAL$/CParticleFieldDeclaration_0D36F193",
		"$LOCAL$/CParticleFieldDeclaration_2DBFD652",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_C0872A7D",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_22A8AC84";
	States = 
	{
		"$LOCAL$/CParticleState_D122C397",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_9EA582F5
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_AF99325C",
		"$LOCAL$/CParticleRenderer_Billboard_BCF0524F",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_AF99325C
{
	DrawOrder = 5;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_shadow_hunter_02shadowShroudSkin_circle_03_alpha.dds";
	SizeField = "Size2";
	ColorField = "Color2";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_BCF0524F
{
	DrawOrder = 4;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_09.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AxisUp";
	Axis2Field = "Axis";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_3ADC27BE
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2D43E259
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D1719390
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0D36F193
{
	FieldName = "AxisUp";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2DBFD652
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_C0872A7D
{
	SamplerName = "Fire_Size";
	Times = 
	{
		0.0000000e+000,
		3.2502955e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		-1.2797840e-002,
		2.3714241e-001,
		2.5164193e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.7005987e-001,
		3.5740890e-002,
		7.4221089e-002,
		6.2334938e-003,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		3.2644629e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		7.8292191e-003,
		2.2437426e-001,
		2.5870454e-001,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		-2.5231343e-002,
		1.6711634e-002,
		3.4480963e-002,
		9.5958360e-002,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_22A8AC84
{
	Expression = "function void	Eval()

{
	Life = rand(0.9,1);
	Velocity = float3(1*WingFlip,0.25,-0.3)*1.5;
	//AxisStretch = Velocity;
	ScalarRotationSpeed = rand(-1,1);
	Position = float3(0.0,0.1,-0.03);
	Axis = normalize(Velocity+ vrand(-0.1,0.1));
	AxisUp = cross(Position, Axis);
	Rotation = rand(-pi,pi);
}";
}
CParticleState	$LOCAL$/CParticleState_D122C397
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_B1834EA6",
		"$LOCAL$/CParticleEvolver_Rotation_019D1F61",
		"$LOCAL$/CParticleEvolver_Script_BD5D9138",
		"$LOCAL$/CParticleEvolver_Localspace_FA8C04BA",
		"$LOCAL$/CParticleEvolver_Script_455E4505",
		"$LOCAL$/CParticleEvolver_Script_FC594FDF",
		"$LOCAL$/CParticleEvolver_Field_D971DF69",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B1834EA6
{
	CustomName = "Physics";
	Drag = 5.0000000e-001;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_019D1F61
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_BD5D9138
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_12F66C5B";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_12F66C5B
{
	Expression = "function void	Eval()

{
	

	Size = 	Fire_Size.sample(LifeRatio,1);
	Size2 = Size *0.3;

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_FA8C04BA
{
	CustomName = "Localspace";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_455E4505
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_675115AC";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_675115AC
{
	Expression = "function void	Eval()
{
	float Offset = 0.2;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,1,1);
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	Color = ColorOut ;
	Color2 = ColorOut*0.5;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FC594FDF
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_2A232C8E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_2A232C8E
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_D971DF69
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_93D9CDE0";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_93D9CDE0
{
	Times = 
	{
		0.0000000e+000,
		6.6186160e-002,
		8.1949580e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.0996969e-003,
		9.8141134e-001,
		9.6842253e-001,
		-8.1647187e-004,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		4.2885926e-002,
		-1.0559715e-002,
		-1.2018729e-001,
		-1.7712319e-001,
		-2.7972259e-002,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_2
{
	Descriptor = "$LOCAL$/CParticleDescriptor_31C28EEA";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_6128E19F
{
	DrawOrder = 2;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	VFlipUVs = true;
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_673D414E
{
	FieldName = "Size2";
	FieldType = float2;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_D6CD3E36
{
	DrawOrder = 6;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_08.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = VelocityAxisAligned;
	ColorField = "Color2";
	AxisField = "Axis";
	AxisScale = 5.0000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6128E19F
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9A4350E7
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D6CD3E36
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_673D414E
{
	SamplerName = "Curve_2";
	ValueType = Float2;
	Times = 
	{
		0.0000000e+000,
		5.1986593e-001,
		7.6409674e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		6.0879409e-001,
		2.9030776e-001,
		4.8200136e-001,
		9.8349166e-001,
		7.2545463e-001,
		1.2264020e+000,
		4.5355007e-001,
		1.7068598e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-5.2365307e-002,
		0.0000000e+000,
		1.2644529e-001,
		0.0000000e+000,
		5.9403453e-002,
		0.0000000e+000,
		-4.0565562e-002,
		7.7520961e-001,
		-4.9718678e-001,
		7.4877727e-001,
		-9.9171750e-002,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_34FEFE31
{
	FieldName = "Size";
	FieldType = float2;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_B1F27048
{
	Renderer = "$LOCAL$/CParticleRenderer_List_7A7E30AB";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_E2381FBC",
		"$LOCAL$/CParticleFieldDeclaration_876F8C39",
		"$LOCAL$/CParticleFieldDeclaration_7C2F92F0",
		"$LOCAL$/CParticleFieldDeclaration_87A33473",
		"$LOCAL$/CParticleFieldDeclaration_2C0DE2B2",
		"$LOCAL$/CParticleFieldDeclaration_D3686077",
		"$LOCAL$/CParticleFieldDeclaration_0F98BD06",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerCurve_A06DFD41",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_DE35433B";
	States = 
	{
		"$LOCAL$/CParticleState_DE16351A",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_7A7E30AB
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_2921F74A",
		"$LOCAL$/CParticleRenderer_Billboard_7D2AE2D5",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_2921F74A
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_09.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	VFlipUVs = true;
	SizeField = "Size2";
	ColorField = "Color2";
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_7D2AE2D5
{
	DrawOrder = 2;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/BeatleJewel.dds";
	SoftnessDistance = 5.0000001e-002;
	BillboardMode = PlanarAlignedQuad;
	VFlipUVs = true;
	AxisField = "Axis";
	Axis2Field = "AxisUp";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E2381FBC
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_876F8C39
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7C2F92F0
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_87A33473
{
	FieldName = "AxisUp";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2C0DE2B2
{
	FieldName = "Size2";
	FieldType = float2;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D3686077
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0F98BD06
{
	FieldName = "Size";
	FieldType = float2;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_A06DFD41
{
	SamplerName = "Curve_2";
	ValueType = Float2;
	Times = 
	{
		0.0000000e+000,
		4.9681669e-001,
		7.6553726e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.4069872e-001,
		6.0606462e-001,
		3.2710180e-001,
		7.3326921e-001,
		4.3948618e-001,
		8.9872980e-001,
		2.3907372e-001,
		1.0396001e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-5.0043590e-002,
		0.0000000e+000,
		1.2083910e-001,
		0.0000000e+000,
		6.5360017e-002,
		0.0000000e+000,
		-4.4633195e-002,
		8.5294223e-001,
		-4.9415076e-001,
		7.4420494e-001,
		-9.8566160e-002,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_DE35433B
{
	Expression = "function void	Eval()

{
	Life = 0.5;
	//Velocity = float3(rand(1,2)*WingFlip,1.0,rand(0.8,1.5));
	//AxisStretch = Velocity;
	float Pcount = (spawner.EmittedCount%10);
	ScalarRotationSpeed = rand(-1,1);
	Position = (float3(1*WingFlip,0.25,-0.3) * ((Pcount/10)+0.2))+float3(0,0.1,0);
	Axis = normalize(lerp(float3(0,0,-1),float3(-0.1,0,-0.50), Pcount/10));
	AxisUp = float3(0.5,1,0);
	
	Size = Curve_2.sample(Pcount/10);
	//Size = float2(Size.x, Size.y *1.5);
	Position -= float3(0,0,Size.y*0.4); 
	//Position += Axis*(Size.x*0.5);
	
	
}";
}
CParticleState	$LOCAL$/CParticleState_DE16351A
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_42820CE5",
		"$LOCAL$/CParticleEvolver_Rotation_FC3A8B0C",
		"$LOCAL$/CParticleEvolver_Script_4BFB40BF",
		"$LOCAL$/CParticleEvolver_Localspace_82EB7149",
		"$LOCAL$/CParticleEvolver_Script_43F47D03",
		"$LOCAL$/CParticleEvolver_Script_E2390734",
		"$LOCAL$/CParticleEvolver_Field_5ED917D6",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_42820CE5
{
	CustomName = "Physics";
	Drag = 3.0000000e+000;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_FC3A8B0C
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_4BFB40BF
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_3BE17EEE";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_3BE17EEE
{
	Expression = "function void	Eval()

{
	

	Size2 = float2(Size.x*0.75,Size.y*1.1);
	Rotation = -1 * Rotation;
	

}";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_82EB7149
{
	CustomName = "Localspace";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_43F47D03
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_39ED8E82";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_39ED8E82
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((0*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,1);
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,1);//ColorCoeff;
	
	
	
	Color = ColorOut;
	RGB = Curve_1.sample((0.25)+0.25);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,1,2);
	RGB = hsv2rgb(RGB);
	ColorOut = float4(RGB,1);
	Color2 = ColorOut;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E2390734
{
	Active = false;
	CustomName = "Debug";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_6067DC07";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6067DC07
{
	Expression = "function void	Eval()
{
	float4 OutColor;
	float3 ValueC = rgb2hsv(Color.rgb);
	ValueC = float3(ValueC.r,0,ValueC.b);
	ValueC = hsv2rgb(ValueC);
	float3 DebugCol = rgb2hsv(Color.rgb);
	DebugCol = float3(DebugCol.r,DebugCol.g,1);
	DebugCol = hsv2rgb(DebugCol);
	OutColor = select(float4(ValueC,Color.a), float4(DebugCol,Color.a),DebugValueColor);
	Color = select(Color,OutColor,DebugValueColorActivation);
	// rgb2hsv(c)
	// hsv2rgb(c)
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_5ED917D6
{
	CustomName = "Field";
	Name = "Rotation";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_22C50851";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_22C50851
{
	Times = 
	{
		0.0000000e+000,
		1.5450469e-001,
		3.7953526e-001,
		8.0612242e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		5.0032371e-001,
		7.7572089e-001,
		4.9916065e-001,
		3.0511531e-001,
		5.0032365e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.3293078e-002,
		1.3587806e-001,
		-4.5089605e-001,
		2.5486970e-002,
		5.3860277e-002,
		2.4478702e-002,
		1.8465789e-002,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_4
{
	Descriptor = "$LOCAL$/CParticleDescriptor_B1F27048";
	Infinite = true;
	DurationInSeconds = 3.4999999e-001;
	SpawnCount = 2.0000000e+001;
	ContinuousSpawner = false;
}
