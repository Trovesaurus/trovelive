Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	EditorInfosIsBlockMinimized = 0;
	Position = float3(-9.9390203e-001, 2.0302465e+000, -1.5293776e+000);
	EulerOrientation = float3(-4.3042980e+001, 1.9519566e+002, 0.0000000e+000);
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Wing_Upper",
		"$LOCAL$/Wing_Lower",
		"$LOCAL$/Droplets_Upper",
		"$LOCAL$/Droplets_Lower",
		"$LOCAL$/Layer_1",
	};
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/CNEdEditorBackdrop_Model3D_E456A8E6",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_99A1E834",
		"$LOCAL$/CParticleAttributeDeclaration_DA34277E",
		"$LOCAL$/CParticleAttributeDeclaration_4DF9B80B",
		"$LOCAL$/CParticleAttributeDeclaration_75080D3B",
		"$LOCAL$/CParticleAttributeDeclaration_78A69EF7",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	IsVisible = false;
	LayerName = "Layer_Brush";
}
CNEdEditorBackdrop_Model3D	$LOCAL$/CNEdEditorBackdrop_Model3D_E456A8E6
{
	ResourceModel = "Meshes/CubeRoom_Dark.fbx";
	IsActive = false;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Wing_Upper
{
	Descriptor = "$LOCAL$/CParticleDescriptor_9731CA0D";
	Infinite = true;
	DurationInSeconds = 2.5000000e-001;
	SpawnCount = 8.0000000e+000;
	SpawnCountRelativeRandomDeviation = 2.0000000e+000;
	ContinuousSpawner = false;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_9731CA0D
{
	Renderer = "$LOCAL$/CParticleRenderer_List_7F49C6CC";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_C0D6D2A7",
		"$LOCAL$/CParticleFieldDeclaration_860202F6",
		"$LOCAL$/CParticleFieldDeclaration_3ADD9F08",
		"$LOCAL$/CParticleFieldDeclaration_5F01D233",
		"$LOCAL$/CParticleFieldDeclaration_5368F957",
		"$LOCAL$/CParticleFieldDeclaration_82E8FD4E",
		"$LOCAL$/CParticleFieldDeclaration_C39BD2E2",
		"$LOCAL$/CParticleFieldDeclaration_D724F094",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_52DDA66B";
	States = 
	{
		"$LOCAL$/CParticleState_AB57C00A",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C0D6D2A7
{
	FieldName = "AlignAxis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_860202F6
{
	FieldName = "NormalAxis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_3ADD9F08
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_5F01D233
{
	FieldName = "ScaleCurve";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_52DDA66B
{
	Expression = "function void	Eval()
{
	Life = rand(0.8,1.1);
	AlignAxis = normalize(float3(1 * WingFlip, 0 , rand(0.4, 0.5) ) );
    NormalAxis = normalize(float3( rand(-0.9,-0.5),1 * WingFlip,0));
    Velocity = float3(0,0.05,0);
    Position = float3(0.3*WingFlip,0.28 + Offset,0.02);
	TextureID = rand(0,4);
}
";
}
CParticleState	$LOCAL$/CParticleState_AB57C00A
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Field_DBA1D27E",
		"$LOCAL$/Field_1",
		"$LOCAL$/CParticleEvolver_Localspace_9EFBFA95",
		"$LOCAL$/CParticleEvolver_Script_E71217E3",
	};
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_9EFBFA95
{
	CustomName = "Localspace";
	ChildList = 
	{
		"$LOCAL$/CParticleEvolver_Physics_80BBBEDE",
		"$LOCAL$/CParticleEvolver_Script_060F327C",
	};
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_060F327C
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_FB4044EF";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FB4044EF
{
	Expression = "function void	Eval()
{
 	  Size *= 1.2;
}
";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_80BBBEDE
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 0.0000000e+000, -2.0000000e+000);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_30AFA20F
{
	Times = 
	{
		0.0000000e+000,
		1.9563501e-001,
		3.7864199e-001,
		7.2618109e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.5837579e-001,
		4.0810099e-001,
		7.6633668e-001,
		9.5209742e-001,
		9.5841408e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.3918710e-001,
		1.3020276e-001,
		2.2511105e-001,
		4.2749679e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_DBA1D27E
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_30AFA20F";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_290469A5
{
	DrawOrder = 3;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_feather_water_fb1x4_02.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x1.pkat";
	SoftnessDistance = 4.0000000e+000;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AlignAxis";
	Axis2Field = "NormalAxis";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_7F49C6CC
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_290469A5",
		"$LOCAL$/CParticleRenderer_Billboard_7C2F92F0",
	};
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_99A1E834
{
	AttributeName = "KillAllOnDespawn";
	AttributeType = int;
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(1, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_DA34277E
{
	AttributeName = "WingFlip";
	DefaultValueF4 = float4(-1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MinValueF4 = float4(-1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_268C563F
{
	Renderer = "$LOCAL$/CParticleRenderer_List_0A15826E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_7BE85CC0",
		"$LOCAL$/CParticleFieldDeclaration_7193DA83",
		"$LOCAL$/CParticleFieldDeclaration_240ABFED",
		"$LOCAL$/CParticleFieldDeclaration_5AB036B4",
		"$LOCAL$/CParticleFieldDeclaration_CC2EF721",
		"$LOCAL$/CParticleFieldDeclaration_6F188C6C",
		"$LOCAL$/CParticleFieldDeclaration_B0AD9A4D",
		"$LOCAL$/CParticleFieldDeclaration_9A4350E7",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_E30F0187";
	States = 
	{
		"$LOCAL$/CParticleState_1CD46B56",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_0A15826E
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_C0E5FAC9",
		"$LOCAL$/CParticleRenderer_Billboard_87A33473",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_C0E5FAC9
{
	DrawOrder = 2;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_feather_water_fb1x4_02.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x1.pkat";
	SoftnessDistance = 4.0000000e+000;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AlignAxis";
	Axis2Field = "NormalAxis";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7BE85CC0
{
	FieldName = "AlignAxis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7193DA83
{
	FieldName = "NormalAxis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_240ABFED
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_5AB036B4
{
	FieldName = "ScaleCurve";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E30F0187
{
	Expression = "function void	Eval()
{
	Life = rand(0.8,1.1);
	AlignAxis = normalize(float3(1 * WingFlip, 0.0 , -0.17) );
    NormalAxis = normalize(float3( rand(-0.9,-0.5),1 * WingFlip,-1));
    Velocity = float3(0,0.05,0);
    Position = float3(0.3*WingFlip,0.30 + Offset,0.09);
	TextureID = rand(0,4);
}
";
}
CParticleState	$LOCAL$/CParticleState_1CD46B56
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Field_DB66A475",
		"$LOCAL$/Field_2",
		"$LOCAL$/CParticleEvolver_Localspace_AD7121D1",
		"$LOCAL$/CParticleEvolver_Script_34FEFE31",
	};
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_AD7121D1
{
	CustomName = "Localspace";
	ChildList = 
	{
		"$LOCAL$/CParticleEvolver_Script_4B978C68",
		"$LOCAL$/CParticleEvolver_Physics_B65CCA6A",
	};
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_4B978C68
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_01DD6F4B";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_01DD6F4B
{
	Expression = "function void	Eval()
{
 //   NormalAxis = normalize(float3( -0.8 + 0.04 * (sin(Age*12))  ,1 * WingFlip,0));
 	  Size *= 1.0;
}
";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B65CCA6A
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 0.0000000e+000, -2.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_DB66A475
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_107831DC";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_107831DC
{
	Times = 
	{
		0.0000000e+000,
		1.9563501e-001,
		3.7864199e-001,
		7.2618109e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.5837579e-001,
		4.0810099e-001,
		7.6633668e-001,
		9.5209742e-001,
		9.5841408e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.3918710e-001,
		1.3020276e-001,
		2.2511105e-001,
		4.2749679e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Wing_Lower
{
	Descriptor = "$LOCAL$/CParticleDescriptor_268C563F";
	Infinite = true;
	DurationInSeconds = 2.5000000e-001;
	SpawnCount = 6.0000000e+000;
	SpawnCountRelativeRandomDeviation = 1.0000000e+000;
	ContinuousSpawner = false;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_4DF9B80B
{
	AttributeName = "Offset";
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_75080D3B
{
	AttributeName = "Offset2";
	DefaultValueF4 = float4(5.0000001e-002, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MinValueF4 = float4(-5.0000001e-002, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	MaxValueF4 = float4(5.0000000e-001, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_5368F957
{
	FieldName = "TextureID2";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_CC2EF721
{
	FieldName = "TextureID2";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6F188C6C
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_82E8FD4E
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_671A6A04
{
	Renderer = "$LOCAL$/CParticleRenderer_List_F0F08F17";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_145916B8",
		"$LOCAL$/CParticleFieldDeclaration_37AD9FDB",
		"$LOCAL$/CParticleFieldDeclaration_B2B17E3A",
		"$LOCAL$/CParticleFieldDeclaration_2921F74A",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_D0CC7C85",
		"$LOCAL$/CParticleSamplerShape_D537E32C",
		"$LOCAL$/CParticleSamplerProceduralTurbulence_876F8C39",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_8FAFAE0E";
	States = 
	{
		"$LOCAL$/CParticleState_C34FBEE9",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_F0F08F17
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_98B74026",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_98B74026
{
	DrawOrder = 3;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_bubble_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftnessDistance = 2.5000000e+000;
	BillboardMode = VelocitySpheroidalAlign;
	AxisScale = 2.5000000e-002;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_145916B8
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_37AD9FDB
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B2B17E3A
{
	FieldName = "SizeVariation";
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_D0CC7C85
{
	SamplerName = "Dots_Curve_Size";
	Times = 
	{
		0.0000000e+000,
		2.6960856e-001,
		7.9328138e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.2586537e-002,
		4.4429645e-002,
		3.2546844e-002,
		2.5725249e-002,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		2.5634710e-003,
		4.9791448e-003,
		-5.1808469e-002,
		-2.0451272e-002,
		-6.3551716e-003,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		2.7018479e-001,
		7.7826542e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		3.8908474e-002,
		1.1469829e-001,
		6.6263676e-002,
		4.1133549e-002,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.7059874e-002,
		3.2080971e-002,
		-8.0417998e-002,
		-3.5095714e-002,
		-6.8168086e-003,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_D537E32C
{
	SamplerName = "Skulls_Shape";
	Shape = "$LOCAL$/CShapeDescriptor_E9396B5F";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_E9396B5F
{
	Position = float3(6.7396599e-001, 5.7220709e-001, 2.8356123e-001);
	EulerOrientation = float3(5.4514003e-006, -1.9999977e+001, 3.4999958e+001);
	BoxDimensions = float3(8.9999992e-001, 1.0000000e-001, 1.0000000e-001);
	Radius = 4.4999999e-001;
	InnerRadius = 4.0000001e-001;
	Height = 1.0000000e+000;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_8FAFAE0E
{
	Expression = "function void	Eval()

{
	Life = rand(0.45,0.65);
	Position = Skulls_Shape.samplePosition() * float3(WingFlip,1,1);
	ScalarRotationSpeed = rand(-0.3,0.3);
	SizeVariation = rand(0,1);
	Velocity = float3((rand(1,2)*WingFlip),rand(2,3),rand(1.5,2.5)) * 1.5;
}";
}
CParticleState	$LOCAL$/CParticleState_C34FBEE9
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_FlipBook_0B956360",
		"$LOCAL$/CParticleEvolver_Field_D77AC3A2",
		"$LOCAL$/CParticleEvolver_Rotation_18A772F6",
		"$LOCAL$/CParticleEvolver_Script_FFD6F1F1",
		"$LOCAL$/LocalSpace_2",
		"$LOCAL$/CParticleEvolver_Script_7A7E30AB",
	};
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_0B956360
{
	CustomName = "FlipBook";
	LastFrameID = 15;
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_8ACC15A3
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 2.0000000e+000, -2.0000000e+000);
	Drag = 5.0000000e+000;
	VelocityFieldSampler = "Turb_1";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_D77AC3A2
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_8B4AFA0D";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_8B4AFA0D
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0976356e-001,
		9.2215210e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		2.4762938e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_18A772F6
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FFD6F1F1
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_C9AB8F08";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C9AB8F08
{
	Expression = "function void	Eval()
{

	Size = Dots_Curve_Size.sample(LifeRatio, SizeVariation);
//	Size2 = Size * 0.8;
}
";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Droplets_Upper
{
	Delay = 7.5000000e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_671A6A04";
	Infinite = true;
	SpawnCountMode = TotalParticleCount;
	SpawnCount = 9.0000000e+000;
	SpawnCountRelativeRandomDeviation = 2.0000000e+000;
	ContinuousSpawner = false;
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_2
{
	CustomName = "Localspace";
	ChildList = 
	{
		"$LOCAL$/CParticleEvolver_Physics_8ACC15A3",
	};
}
CParticleEvolver_Field	$LOCAL$/Field_1
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_3C3C16FE";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_3C3C16FE
{
	ValueType = Float2;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.1228869e-001,
		5.4963487e-001,
		1.0798970e+000,
		5.9447742e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		2.9459653e+000,
		-2.0084021e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/Field_2
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_ABED1FD3";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_ABED1FD3
{
	ValueType = Float2;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.0885103e-001,
		7.0835656e-001,
		9.4498789e-001,
		3.9858012e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		2.9459653e+000,
		-1.5280122e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_A1D24970
{
	Renderer = "$LOCAL$/CParticleRenderer_List_3C88ECF3";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2A9652DD",
		"$LOCAL$/CParticleFieldDeclaration_CDB8CC64",
		"$LOCAL$/CParticleFieldDeclaration_F1C370F7",
		"$LOCAL$/CParticleFieldDeclaration_7D2AE2D5",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerDoubleCurve_E710D786",
		"$LOCAL$/CParticleSamplerShape_6B62E9C1",
		"$LOCAL$/CParticleSamplerProceduralTurbulence_405E321E",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_2FAA2BBB";
	States = 
	{
		"$LOCAL$/CParticleState_EF41079A",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_3C88ECF3
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_4A11C532",
		"$LOCAL$/CParticleRenderer_Billboard_F78DFE5D",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_4A11C532
{
	DrawOrder = 3;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_bubble_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftnessDistance = 2.5000000e+000;
	BillboardMode = VelocitySpheroidalAlign;
	AxisScale = 2.5000000e-002;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2A9652DD
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_CDB8CC64
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F1C370F7
{
	FieldName = "SizeVariation";
}
CParticleSamplerDoubleCurve	$LOCAL$/CParticleSamplerDoubleCurve_E710D786
{
	SamplerName = "Dots_Curve_Size";
	Times = 
	{
		0.0000000e+000,
		2.7462247e-001,
		7.8704756e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.2586537e-002,
		6.2583841e-002,
		1.6303618e-002,
		9.4820224e-003,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		2.6111440e-003,
		4.8722001e-003,
		-5.0695699e-002,
		-2.1068001e-002,
		-6.5468182e-003,
		0.0000000e+000,
	};
	Times1 = 
	{
		0.0000000e+000,
		2.6182827e-001,
		7.6367509e-001,
		1.0000000e+000,
	};
	FloatValues1 = 
	{
		3.8908474e-002,
		1.2855275e-001,
		6.3874975e-002,
		2.4890322e-002,
	};
	FloatTangents1 = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.6532231e-002,
		3.1687360e-002,
		-7.9431325e-002,
		-3.7405040e-002,
		-7.2653606e-003,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_6B62E9C1
{
	SamplerName = "Droplets_Shape2";
	Shape = "$LOCAL$/CShapeDescriptor_2B37FB18";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_2B37FB18
{
	Position = float3(6.1469728e-001, 4.3697095e-001, 1.0892096e-001);
	EulerOrientation = float3(-2.4582446e-004, 7.9999557e+001, 1.9999905e+001);
	BoxDimensions = float3(9.9999905e-002, 9.9999957e-002, 5.9999943e-001);
	Radius = 4.4999999e-001;
	InnerRadius = 4.0000001e-001;
	Height = 1.0000000e+000;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_2FAA2BBB
{
	Expression = "function void	Eval()

{
	Life = rand(0.4,0.45);
	Position = Droplets_Shape2.samplePosition() * float3(WingFlip,1,1);
	ScalarRotationSpeed = rand(-0.3,0.3);
	SizeVariation = rand(0,1);
	Velocity = float3((rand(0.5,1)*WingFlip),rand(-0.1,-0.2),rand(0.25,0.0)) * 1.5;
}";
}
CParticleState	$LOCAL$/CParticleState_EF41079A
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_FlipBook_73441165",
		"$LOCAL$/CParticleEvolver_Field_F5EAA98C",
		"$LOCAL$/CParticleEvolver_Rotation_4EE16BC0",
		"$LOCAL$/CParticleEvolver_Script_976A9583",
		"$LOCAL$/CParticleEvolver_Localspace_353BE2ED",
		"$LOCAL$/CParticleEvolver_Script_91391B2F",
	};
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_73441165
{
	CustomName = "FlipBook";
	LastFrameID = 15;
	LoopCount = 2.0000000e+000;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_F5EAA98C
{
	CustomName = "Field";
	Name = "Alpha";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_7DC6813F";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_7DC6813F
{
	Times = 
	{
		0.0000000e+000,
		5.4435360e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0976356e-001,
		8.8989663e-001,
		8.7735838e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.7358224e+000,
		1.2382329e-001,
		1.0364518e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_4EE16BC0
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_976A9583
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_F7995102";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_F7995102
{
	Expression = "function void	Eval()
{

	Size = Dots_Curve_Size.sample(LifeRatio, SizeVariation);
//	Size2 = Size * 0.8;
}
";
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_353BE2ED
{
	CustomName = "Localspace";
	ChildList = 
	{
		"$LOCAL$/CParticleEvolver_Physics_045695B4",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_045695B4
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, -2.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Turb_1";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Droplets_Lower
{
	Delay = 7.5000000e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_A1D24970";
	Infinite = true;
	SpawnCountMode = TotalParticleCount;
	SpawnCount = 8.0000000e+000;
	SpawnCountRelativeRandomDeviation = 2.0000000e+000;
	ContinuousSpawner = false;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_78A69EF7
{
	AttributeName = "CustomAttribute_4";
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		4.2719665e-001,
		4.6736404e-001,
		5.1589960e-001,
		6.1129701e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2673317e-001,
		9.4980693e-001,
		2.3374155e-001,
		4.1906407e-001,
		5.5984557e-001,
		1.0934484e-001,
		9.2877245e-001,
		9.3561447e-001,
		3.9134210e-001,
		9.3395776e-001,
		9.3822396e-001,
		3.9214829e-001,
		9.9572515e-001,
		8.3348203e-001,
		1.6055931e-001,
		1.0000000e+000,
		8.2623291e-001,
		1.4453125e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	float OffsetLocal = 0.0;
	float Scale = 0.75;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.75,abs(cos(pi * LifeRatio*0.5)));
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E71217E3
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C39BD2E2
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B0AD9A4D
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D724F094
{
	FieldName = "Size";
	FieldType = float2;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9A4350E7
{
	FieldName = "Size";
	FieldType = float2;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36
{
	Expression = "function void	Eval()
{
	float OffsetLocal = 0.0;
	float Scale = 0.75;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.5,0.75* abs(cos(pi * LifeRatio*0.5)));
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_34FEFE31
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B1F27048
{
	Expression = "function void	Eval()
{
	float OffsetLocal = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.5,0.5* abs(cos(pi * LifeRatio*0.5)));
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_7A7E30AB
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_B1F27048";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2921F74A
{
	FieldName = "Alpha";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7D2AE2D5
{
	FieldName = "Alpha";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E2381FBC
{
	Expression = "function void	Eval()
{
	float OffsetLocal = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.5,0.5* abs(cos(pi * LifeRatio*0.5)));
	RGB = hsv2rgb(RGB);
	
	float4 ColorOut = float4(RGB,Alpha);//ColorCoeff;
	
	
	
	Color = ColorOut;
	//Color2 = ColorOut *3;
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_91391B2F
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E2381FBC";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_405E321E
{
	SamplerName = "Turb_1";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_876F8C39
{
	SamplerName = "Turb_1";
	TimeScale = 5.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_7C2F92F0
{
	DrawOrder = 3;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_feather_water_fb1x4_02.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x1.pkat";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_05.dds";
	SoftnessDistance = 4.0000000e+000;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AlignAxis";
	Axis2Field = "NormalAxis";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_87A33473
{
	DrawOrder = 2;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_feather_water_fb1x4_02.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x1.pkat";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_05.dds";
	SoftnessDistance = 4.0000000e+000;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AlignAxis";
	Axis2Field = "NormalAxis";
	AxisScale = 1.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_F78DFE5D
{
	DrawOrder = 3;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_bubble_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	AlphaRemapper = "Textures/vfx_alphaRemapDissolve_05.dds";
	SoftnessDistance = 2.5000000e+000;
	BillboardMode = VelocitySpheroidalAlign;
	AxisScale = 2.5000000e-002;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 2.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_A33BCCA0";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
		"$LOCAL$/CParticleFieldDeclaration_D6CD3E36",
		"$LOCAL$/CParticleFieldDeclaration_34FEFE31",
		"$LOCAL$/CParticleFieldDeclaration_E2381FBC",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
	States = 
	{
		"$LOCAL$/CParticleState_E71217E3",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	Life = 0.50;
	Size = 0.4;
	//Velocity = scene.axisUp();
	Color = float4(1.0);
	Axis = normalize(float3(1*WingFlip,0.65,0.4));
	AxisOrig = Axis;
	Position = float3(0.15*WingFlip,0.18,0);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_A33BCCA0
{
	DrawOrder = 5;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend_Soft;
	Diffuse = "Textures/champange256x256.dds";
	SoftnessDistance = 1.0000000e-001;
	BillboardMode = VelocityAxisAligned;
	AxisField = "Axis";
	AxisScale = 5.0000000e-001;
}
CParticleState	$LOCAL$/CParticleState_E71217E3
{
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_C39BD2E2",
		"$LOCAL$/Script_1",
		"$LOCAL$/Field_3",
		"$LOCAL$/LocalSpace_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_C39BD2E2
{
	CustomName = "Physics";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D6CD3E36
{
	FieldName = "Axis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_34FEFE31
{
	FieldName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/Script_1
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7A7E30AB";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7A7E30AB
{
	Expression = "function void	Eval()
{
	Axis = rotate(AxisOrig, float3(0,0,1), Rotation);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E2381FBC
{
	FieldName = "AxisOrig";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEvolver_Field	$LOCAL$/Field_3
{
	CustomName = "Field";
	Name = "Rotation";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_91391B2F";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_91391B2F
{
	Times = 
	{
		0.0000000e+000,
		1.2767962e-001,
		7.9942465e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		-6.6488430e-002,
		7.3620595e-002,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-1.0885736e-001,
		3.9309603e-003,
		2.0681489e-002,
		-2.4301467e-002,
		-7.2561381e-003,
		-1.3267618e-001,
		0.0000000e+000,
	};
	MinLimits = float4(-1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_1
{
	CustomName = "Localspace";
}
