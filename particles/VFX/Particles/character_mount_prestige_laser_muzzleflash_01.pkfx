Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(1.1183176e+000, 5.0353631e-002, 3.9244390e+000);
	EulerOrientation = float3(9.2399895e-001, 1.6939972e+001, 0.0000000e+000);
	PostFx_EnableGlow = false;
	Backdrops = "$LOCAL$/_BackdropList";
	ShowGrid = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Ring",
		"$LOCAL$/Gradient",
		"$LOCAL$/Layer_1",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_69D2FC51
{
	FieldName = "AxisNormal";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_D8E2E22F
{
	CustomName = "Localspace";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7C28014D
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_2FEE0EDC";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_51A09460
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_6FCE61A3";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6FCE61A3
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
	//Size2 = Size * 0.7;
	TextureID = Ring_TexID.sample(LifeRatio);
}
";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_E52DDEDF
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_fb2x2_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	SoftAnimationBlending = true;
	AxisField = "AxisAlign";
	Axis2Field = "AxisNormal";
	AxisScale = 1.0000000e+000;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_A5B4F6B9
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_04BBDE98";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Ring
{
	Descriptor = "$LOCAL$/CParticleDescriptor_7E41A54C";
	SpawnCountMode = TotalParticleCount;
	ContinuousSpawner = false;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C2A62DD0
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_2FEE0EDC
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		2.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E15BAACA
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_7E1B4AAE
{
	CustomName = "Physics";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_7E41A54C
{
	EnableSpawnerIDs = true;
	Renderer = "$LOCAL$/CParticleRenderer_List_F3BC4CE0";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_1C6D3E26",
		"$LOCAL$/CParticleFieldDeclaration_69D2FC51",
		"$LOCAL$/CParticleFieldDeclaration_C2A62DD0",
		"$LOCAL$/CParticleFieldDeclaration_E15BAACA",
		"$LOCAL$/CParticleFieldDeclaration_90B044AC",
		"$LOCAL$/CParticleFieldDeclaration_0780AADF",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerCurve_65B1F876",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_C09A9F94";
	States = 
	{
		"$LOCAL$/CParticleState_AF761007",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_1C6D3E26
{
	FieldName = "AxisAlign";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleState	$LOCAL$/CParticleState_AF761007
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_7E1B4AAE",
		"$LOCAL$/CParticleEvolver_Field_A5B4F6B9",
		"$LOCAL$/CParticleEvolver_Field_7C28014D",
		"$LOCAL$/CParticleEvolver_Localspace_D8E2E22F",
		"$LOCAL$/CParticleEvolver_Rotation_97489A21",
		"$LOCAL$/CParticleEvolver_Script_51A09460",
		"$LOCAL$/CParticleEvolver_Script_FE973329",
	};
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_04BBDE98
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		3.0038312e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		2.9112582e+000,
		2.1149285e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C09A9F94
{
	Expression = "function void	Eval()

{
	Life = 0.5;
	Size = 0.25;
	AxisAlign = float3(0,1,0);
	AxisNormal = float3(0,0,1);
	Rotation = rand(-pi,pi);
	TextureID = 1;
	TextureID2 = 2;
}";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_97489A21
{
	CustomName = "Rotation";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9D2E15E4
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A818ED17
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_45E6EF06
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_530169B1";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B8FD3C49
{
	Expression = "function void	Eval()


{


	Life = 0.4;


	Position = float3(0,0,0);


}


";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_B65ADEF5
{
	CustomName = "Billboard";
	Diffuse = "Textures/PrestigeStar.dds";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Gradient
{
	Descriptor = "$LOCAL$/CParticleDescriptor_8498E29A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_8210793F
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.0000000e+000,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		-3.4220964e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-3.7167513e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_0868550B
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_9CA58BA2
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_C63303DD";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_C63303DD
{
	Times = 
	{
		0.0000000e+000,
		3.1350422e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		3.9519632e-001,
		2.1864694e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.4418667e-002,
		2.0675325e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_462B472C
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_8210793F";
}
CParticleState	$LOCAL$/CParticleState_CE0D4DE8
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_0868550B",
		"$LOCAL$/CParticleEvolver_Field_9CA58BA2",
		"$LOCAL$/CParticleEvolver_Field_462B472C",
		"$LOCAL$/CParticleEvolver_Field_45E6EF06",
		"$LOCAL$/CParticleEvolver_Script_A44865B0",
		"$LOCAL$/CParticleEvolver_Script_E71217E3",
		"$LOCAL$/LocalSpace_1",
	};
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_A44865B0
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7F602DB3";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7F602DB3
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
	Size2 = Size * 2;
}
";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_530169B1
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0000000e+000,
		3.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_8498E29A
{
	Renderer = "$LOCAL$/CParticleRenderer_List_673D414E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_9D2E15E4",
		"$LOCAL$/CParticleFieldDeclaration_A818ED17",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_B8FD3C49";
	States = 
	{
		"$LOCAL$/CParticleState_CE0D4DE8",
	};
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_90B044AC
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0780AADF
{
	FieldName = "TextureID2";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_F3BC4CE0
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_E52DDEDF",
	};
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_65B1F876
{
	SamplerName = "Ring_TexID";
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		3.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((1-LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FE973329
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E71217E3
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_6128E19F
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
	SizeField = "Size2";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_673D414E
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_B65ADEF5",
		"$LOCAL$/CParticleRenderer_Billboard_6128E19F",
	};
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_List_FE973329";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_C39BD2E2",
		"$LOCAL$/CParticleFieldDeclaration_B0AD9A4D",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_D724F094";
	States = 
	{
		"$LOCAL$/CParticleState_9A4350E7",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_FE973329
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_E71217E3",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_E71217E3
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_add-alpha.dds";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C39BD2E2
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B0AD9A4D
{
	FieldName = "ColorCoeff";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D724F094
{
	Expression = "function void	Eval()


{


	Life = 0.5;


	Position = float3(0,0,0);


}


";
}
CParticleState	$LOCAL$/CParticleState_9A4350E7
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_D6CD3E36",
		"$LOCAL$/CParticleEvolver_Field_34FEFE31",
		"$LOCAL$/CParticleEvolver_Field_7A7E30AB",
		"$LOCAL$/CParticleEvolver_Field_7D2AE2D5",
		"$LOCAL$/CParticleEvolver_Script_91391B2F",
		"$LOCAL$/CParticleEvolver_Script_876F8C39",
		"$LOCAL$/LocalSpace_2",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_D6CD3E36
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_34FEFE31
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_B1F27048";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_B1F27048
{
	Times = 
	{
		0.0000000e+000,
		3.1628680e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		1.8092344e+000,
		1.4590995e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.5256709e-002,
		2.0591523e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7A7E30AB
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_2921F74A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_2921F74A
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.0000000e+000,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		-3.4220964e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-3.7167513e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7D2AE2D5
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_E2381FBC";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_E2381FBC
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0000000e+000,
		3.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_91391B2F
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_405E321E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_405E321E
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
	//Size2 = Size * 2;
}
";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_876F8C39
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_1
{
	CustomName = "Localspace";
}
CParticleEvolver_Localspace	$LOCAL$/LocalSpace_2
{
	CustomName = "Localspace";
}
