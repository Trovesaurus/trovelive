Version = 1.13.4.53415;
Generator = EDITOR;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(2.7989120e+000, 2.5785098e+000, 6.8411589e+000);
	EulerOrientation = float3(-1.6709112e+001, 2.1482990e+001, 0.0000000e+000);
	Backdrops = "$LOCAL$/_BackdropList";
	IsLooping = true;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Smoke_GroundRing_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_AE135B2A";
	SpawnCount = 5.0000000e+001;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_AE135B2A
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_9136D2F4";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_8E099A31",
		"$LOCAL$/CParticleFieldDeclaration_E19AC518",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_00269EC3",
		"$LOCAL$/CParticleSamplerShape_AA1655F4",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_5566F5E7";
	States = 
	{
		"$LOCAL$/CParticleState_3AF8190E",
	};
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Smoke_GroundRing_1",
		"$LOCAL$/Smoke_Cloud_1",
		"$LOCAL$/Smoke_GroundCone_1",
		"$LOCAL$/Circle_Ground_1",
		"$LOCAL$/Circle_Ground_2",
		"$LOCAL$/Gradient_1",
		"$LOCAL$/Light_1",
		"$LOCAL$/Embers_1",
		"$LOCAL$/Ash_1",
		"$LOCAL$/Lava_1",
		"$LOCAL$/SoundLayer_1",
		"$LOCAL$/Layer_1",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_9136D2F4
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_smokecloud_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftAnimationBlending = true;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5566F5E7
{
	Expression = "function void	Eval()
{
	Life = rand(0.5,1.5);
	Size = rand(0.2,0.65);
	Velocity = Cylinder.samplePosition() * rand(15,17) + float3(0,rand(-1,1),0);
	Rotation = rand(-pi,pi);
	ScalarRotationSpeed = rand(-0.25,0.25);
}
";
}
CParticleState	$LOCAL$/CParticleState_3AF8190E
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_36D6D4BD",
		"$LOCAL$/CParticleEvolver_FlipBook_F57D922D",
		"$LOCAL$/CParticleEvolver_Damper_CF880096",
		"$LOCAL$/CParticleEvolver_Rotation_C9F5C011",
		"$LOCAL$/CParticleEvolver_Field_62FFBDBB",
		"$LOCAL$/CParticleEvolver_Script_F168F186",
		"$LOCAL$/CParticleEvolver_Script_FE973329",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_36D6D4BD
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 1.5000000e+000, 0.0000000e+000);
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerCurve_6128E19F",
	};
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_00269EC3
{
	SamplerName = "Radius";
	Shape = "$LOCAL$/CShapeDescriptor_69D57342";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_69D57342
{
	ShapeType = SPHERE;
	Radius = 3.5000000e+000;
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_F57D922D
{
	CustomName = "FlipBook";
	LastFrameID = 15;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_AA1655F4
{
	SamplerName = "Cylinder";
	Shape = "$LOCAL$/CShapeDescriptor_AB93F1C7";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_AB93F1C7
{
	ShapeType = CYLINDER;
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_CF880096
{
	CustomName = "Damper";
	MinSpeed = 2.5000000e-001;
	ExpDampingTime = 4.5000000e+000;
	FieldToDampen = "Velocity";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_C9F5C011
{
	CustomName = "Rotation";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_22142957
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_1DB9C766";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_3976CB2B",
		"$LOCAL$/CParticleFieldDeclaration_BFFA733F",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_EE14861B",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_1DA3E0C5";
	States = 
	{
		"$LOCAL$/CParticleState_44B4FC6C",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_1DB9C766
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_smokecloud_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftAnimationBlending = true;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_E0BC6DAF
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_6A22B69E";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6A22B69E
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		7.5000000e-001,
		0.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		5.0000000e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-2.3694527e+000,
		-3.5021162e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_EE14861B
{
	SamplerName = "Cylinder";
	Shape = "$LOCAL$/CShapeDescriptor_9553417A";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_9553417A
{
	ShapeType = CYLINDER;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_1DA3E0C5
{
	Expression = "function void	Eval()
{
	Life = rand(0.5,1.5);
	Size = rand(0.25,0.55);
//	Velocity = Cylinder.samplePosition() * rand(14,16) + float3(0,rand(-1,1),0);
	Velocity = float3(rand(-1.5,1.5),8,rand(-1.5,1.5));
	Rotation = rand(-pi,pi);
	ScalarRotationSpeed = rand(-0.25,0.25);
}
";
}
CParticleState	$LOCAL$/CParticleState_44B4FC6C
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_69C3DD9F",
		"$LOCAL$/CParticleEvolver_FlipBook_4A35ED4E",
		"$LOCAL$/CParticleEvolver_Damper_67674F29",
		"$LOCAL$/CParticleEvolver_Rotation_420018A0",
		"$LOCAL$/CParticleEvolver_Field_20797C94",
		"$LOCAL$/CParticleEvolver_Field_B96163CA",
		"$LOCAL$/CParticleEvolver_Field_24729365",
		"$LOCAL$/CParticleEvolver_Script_B217F5C0",
		"$LOCAL$/CParticleEvolver_Script_E71217E3",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_69C3DD9F
{
	CustomName = "Physics";
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_4A35ED4E
{
	CustomName = "FlipBook";
	LastFrameID = 15;
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_67674F29
{
	CustomName = "Damper";
	MinSpeed = 1.0000000e+000;
	ExpDampingTime = 5.0000000e+000;
	FieldToDampen = "Velocity";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_420018A0
{
	CustomName = "Rotation";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Smoke_Cloud_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_22142957";
	SpawnCount = 2.0000000e+001;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_20797C94
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_58ACCCE7";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_58ACCCE7
{
	Times = 
	{
		0.0000000e+000,
		4.9573055e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.2196715e-001,
		9.9382222e-001,
		6.5611768e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Gradient_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_2A398D76";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_200E5E3D
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_49220B44";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_2483883C",
		"$LOCAL$/CParticleFieldDeclaration_E7FB0B02",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_22142957",
		"$LOCAL$/CParticleSamplerShape_47F3D3F8",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_9553417A";
	States = 
	{
		"$LOCAL$/CParticleState_1DA3E0C5",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_49220B44
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_smokecloud_fb4x4_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_4x4.pkat";
	SoftAnimationBlending = true;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_22142957
{
	SamplerName = "Radius";
	Shape = "$LOCAL$/CShapeDescriptor_1DB9C766";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_1DB9C766
{
	ShapeType = SPHERE;
	Radius = 3.5000000e+000;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_47F3D3F8
{
	SamplerName = "Cylinder";
	Shape = "$LOCAL$/CShapeDescriptor_EE14861B";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_EE14861B
{
	ShapeType = CYLINDER;
	InnerRadius = 5.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_9553417A
{
	Expression = "function void	Eval()
{
	Life = 0.75;
	Size = rand(0.2,0.2);
	Position = Cylinder.samplePosition();
	Velocity = Position * rand(-4.5,-5);
	Rotation = rand(-pi,pi);
	ScalarRotationSpeed = rand(-0.25,0.25);
}
";
}
CParticleState	$LOCAL$/CParticleState_1DA3E0C5
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_44B4FC6C",
		"$LOCAL$/CParticleEvolver_FlipBook_69C3DD9F",
		"$LOCAL$/CParticleEvolver_Damper_4A35ED4E",
		"$LOCAL$/CParticleEvolver_Rotation_67674F29",
		"$LOCAL$/CParticleEvolver_Field_E0BC6DAF",
		"$LOCAL$/CParticleEvolver_Field_4A0324ED",
		"$LOCAL$/CParticleEvolver_Script_280BFE87",
		"$LOCAL$/CParticleEvolver_Script_B0AD9A4D",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_44B4FC6C
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, 2.0000000e+001, 0.0000000e+000);
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_69C3DD9F
{
	CustomName = "FlipBook";
	LastFrameID = 15;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Smoke_GroundCone_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_200E5E3D";
	DurationInSeconds = 5.0000000e-001;
	SpawnCount = 2.0000000e+002;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_67674F29
{
	CustomName = "Rotation";
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_4A35ED4E
{
	CustomName = "Damper";
	MinSpeed = 2.5000000e-001;
	ExpDampingTime = 5.0000000e+000;
	FieldToDampen = "Velocity";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8E099A31
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_FC9E2140
{
	EnableSpawnerIDs = true;
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_FC62B903";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_139A7A82",
		"$LOCAL$/CParticleFieldDeclaration_AED78A6D",
		"$LOCAL$/CParticleFieldDeclaration_6C3F9334",
		"$LOCAL$/CParticleFieldDeclaration_346B5807",
		"$LOCAL$/CParticleFieldDeclaration_452443D6",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_D019A451";
	States = 
	{
		"$LOCAL$/CParticleState_F7D100E8",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_FC62B903
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/PrestigeStar.dds";
	SoftAnimationBlending = true;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AxisAlign";
	Axis2Field = "AxisNormal";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_139A7A82
{
	FieldName = "AxisAlign";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_AED78A6D
{
	FieldName = "AxisNormal";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6C3F9334
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_346B5807
{
	FieldName = "SizeCoeff";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_452443D6
{
	FieldName = "ColorCoeff";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D019A451
{
	Expression = "function void	Eval()



{

	Life = 0.5;

	Size = 0.25;

	AxisAlign = float3(1,0,0);

	AxisNormal = float3(0,1,0);

	Position = float3(0,0.05,0);

	Rotation = rand(-pi,pi);

}";
}
CParticleState	$LOCAL$/CParticleState_F7D100E8
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_87A1BDCB",
		"$LOCAL$/CParticleEvolver_Field_0EB7FAEA",
		"$LOCAL$/CParticleEvolver_Field_5F043E5C",
		"$LOCAL$/CParticleEvolver_Field_3CC7D3BE",
		"$LOCAL$/CParticleEvolver_Localspace_71D0DF90",
		"$LOCAL$/CParticleEvolver_FlipBook_D6222D93",
		"$LOCAL$/CParticleEvolver_Rotation_F32DC252",
		"$LOCAL$/CParticleEvolver_Script_1655867D",
		"$LOCAL$/CParticleEvolver_Script_9A4350E7",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_87A1BDCB
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_0EB7FAEA
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_16D15EF5";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_16D15EF5
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		8.5000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		1.7977535e+001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_5F043E5C
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_B7F24E4F";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_B7F24E4F
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		2.0000000e-001,
		5.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		7.5000000e-001,
		1.0000000e+000,
		3.1162298e-001,
		0.0000000e+000,
		7.5000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-3.7013108e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-6.1688513e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_3CC7D3BE
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_D682FE59";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_D682FE59
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		2.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_71D0DF90
{
	CustomName = "Localspace";
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_D6222D93
{
	CustomName = "FlipBook";
	LastFrameID = 3;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_F32DC252
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_1655867D
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D7283884";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D7283884
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Circle_Ground_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_FC9E2140";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_2A398D76
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_21EDDE71";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FB5EB588",
		"$LOCAL$/CParticleFieldDeclaration_12D13EEB",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_688F028A";
	States = 
	{
		"$LOCAL$/CParticleState_5D8B2F15",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_21EDDE71
{
	DrawOrder = 1;
	CustomName = "Billboard";
	BillboardingMaterial = Additive_Soft;
	Diffuse = "Textures/vfx_circle_03.dds";
	SoftnessDistance = 2.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FB5EB588
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_12D13EEB
{
	FieldName = "ColorCoeff";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_688F028A
{
	Expression = "function void	Eval()
{
	Life = 0.4;
}
";
}
CParticleState	$LOCAL$/CParticleState_5D8B2F15
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_FDFC40FC",
		"$LOCAL$/CParticleEvolver_Field_E893356F",
		"$LOCAL$/CParticleEvolver_Field_01778479",
		"$LOCAL$/CParticleEvolver_Field_F6389AB3",
		"$LOCAL$/CParticleEvolver_Script_6BFFE29D",
		"$LOCAL$/CParticleEvolver_Script_7A7E30AB",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_FDFC40FC
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_E893356F
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_B499395E";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_B499395E
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		5.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_01778479
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_959ED030";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_959ED030
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.2188417e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_F6389AB3
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_7B4025F2";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_7B4025F2
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.0000000e+000,
		3.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_6BFFE29D
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_5C55B724";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5C55B724
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_3976CB2B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_B96163CA
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_ABF08955";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_ABF08955
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		9.9999994e-002,
		9.9999998e-003,
		0.0000000e+000,
		5.0000000e-001,
		4.9999997e-002,
		0.0000000e+000,
		0.0000000e+000,
		5.0000000e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2483883C
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_F168F186
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_EC300BC1";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_EC300BC1
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E19AC518
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_62FFBDBB
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_3D9D019A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_3D9D019A
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-2.0818243e+000,
		-1.6787924e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_24729365
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_699A538C";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_699A538C
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-5.1782513e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_BFFA733F
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_B217F5C0
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_8A3EE783";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_8A3EE783
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E7FB0B02
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_4A0324ED
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_232DFFB4";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_232DFFB4
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-6.4830437e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_280BFE87
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_EFE6AC56";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_EFE6AC56
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B3AE7690
{
	Expression = "function void	Eval()



{

	Life = 0.75;

	Size = 0.25;

	AxisAlign = float3(1,0,0);

	AxisNormal = float3(0,1,0);

	Position = float3(0,0.75,0);

	Rotation = rand(-pi,pi);

}";
}
CParticleState	$LOCAL$/CParticleState_D2F41093
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_ECA3E152",
		"$LOCAL$/CParticleEvolver_Field_C6E6917D",
		"$LOCAL$/CParticleEvolver_Field_7E283297",
		"$LOCAL$/CParticleEvolver_Field_0AFE5661",
		"$LOCAL$/CParticleEvolver_Localspace_9E0B2B5B",
		"$LOCAL$/CParticleEvolver_FlipBook_D7D02FBA",
		"$LOCAL$/CParticleEvolver_Rotation_3B904C05",
		"$LOCAL$/CParticleEvolver_Script_FBD828AC",
		"$LOCAL$/CParticleEvolver_Script_34FEFE31",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_ECA3E152
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_C6E6917D
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_AA389F84";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_AA389F84
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		4.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		8.5157042e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7E283297
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_5A2DE9A6";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_5A2DE9A6
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		2.0000000e-001,
		5.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		7.5000000e-001,
		7.4769002e-001,
		2.4769002e-001,
		0.0000000e+000,
		7.5000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-4.2926186e-001,
		-3.4057125e-001,
		0.0000000e+000,
		0.0000000e+000,
		-7.1543640e-001,
		-5.6761873e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_0AFE5661
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_B02B9438";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_B02B9438
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.5000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_9E0B2B5B
{
	CustomName = "Localspace";
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_D7D02FBA
{
	CustomName = "FlipBook";
	LastFrameID = 3;
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_3B904C05
{
	CustomName = "Rotation";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FBD828AC
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_50145EDF";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_50145EDF
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Circle_Ground_2
{
	Descriptor = "$LOCAL$/CParticleDescriptor_C06E80CB";
}
CActionFactorySound	$LOCAL$/SoundLayer_1
{
	EventStart = "Play_ablty_shroomsplosion";
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/_Backdrop_Model3D",
		"$LOCAL$/_Backdrop_Light",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
}
CNEdEditorBackdrop_Model3D	$LOCAL$/_Backdrop_Model3D
{
	EditorInfosPosition = int2(-252, -371);
	LayerName = "Layer_Model";
	ResourceModel = "Meshes/CubeRoom_Default.fbx";
}
CNEdEditorLightFactory	$LOCAL$/_Backdrop_Light_Factory
{
	NearClipPlane = 1.0000000e+002;
	LightSize = 9.9999998e-003;
	SpotFalloff = 8.8541701e-002;
	Magnitude = 1.0000000e+005;
}
CNEdEditorBackdrop_Light	$LOCAL$/_Backdrop_Light
{
	LayerName = "GlobalLight";
	Position = float3(1.1233553e+002, 2.8270447e+002, 2.2297581e+002);
	EulerOrientation = float3(-4.8550171e+001, 2.6739031e+001, -9.5600376e-007);
	UniformScale = 9.9999988e-001;
	LightFactory = "$LOCAL$/_Backdrop_Light_Factory";
	LightDistance = 3.7717276e+002;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_50207959
{
	FieldName = "ColorCoeff";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_7539E45E
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_38000B79";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_38000B79
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		2.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Embers_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_3EE94BBA";
	SpawnCount = 2.0000000e+001;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_652E7374
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_79D79D47";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_89775216",
		"$LOCAL$/CParticleFieldDeclaration_2B86AF91",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_24314D28",
		"$LOCAL$/CParticleSamplerShape_DF65DF0B",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_E70C6635";
	States = 
	{
		"$LOCAL$/CParticleState_650C369C",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_79D79D47
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/PrestigeStar.dds";
	BillboardMode = VelocityAxisAligned;
	AxisScale = 5.0000001e-002;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_89775216
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2B86AF91
{
	FieldName = "ColorCoeff";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_24314D28
{
	SamplerName = "Sampler_0";
	Strength = 1.7677670e+000;
	Octaves = 1;
	Gain = 1.0000000e+000;
	TimeScale = 5.0000000e-001;
	FastFakeFlow = true;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_DF65DF0B
{
	SamplerName = "Shape_0";
	Shape = "$LOCAL$/CShapeDescriptor_5212152A";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_5212152A
{
	ShapeType = SPHERE;
	Radius = 5.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E70C6635
{
	Expression = "function void	Eval()

{
	Life = rand(1,2);
	Size = rand(0.02, 0.04);
	ScalarRotationSpeed = rand(-1,1);
	Velocity = float3(rand(-1,1),rand(0,1.25),rand(-1,1)) * rand(10,15);
	Position = Shape_0.samplePosition();
}";
}
CParticleState	$LOCAL$/CParticleState_650C369C
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_4D618B8F",
		"$LOCAL$/CParticleEvolver_Field_D75D39FE",
		"$LOCAL$/CParticleEvolver_Rotation_B242C3D0",
		"$LOCAL$/CParticleEvolver_Damper_9C0BC6D3",
		"$LOCAL$/CParticleEvolver_Script_9C5EB492",
		"$LOCAL$/CParticleEvolver_Field_899248C4",
		"$LOCAL$/CParticleEvolver_Script_876F8C39",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_4D618B8F
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, 2.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Sampler_0";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_D75D39FE
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_C1B54199";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_C1B54199
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.9999999e-001,
		7.9999995e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		7.5000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		7.5000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_B242C3D0
{
	CustomName = "Rotation";
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_9C0BC6D3
{
	CustomName = "Damper";
	MinSpeed = 5.0000000e-001;
	ExpDampingTime = 5.5000000e+000;
	FieldToDampen = "Velocity";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_9C5EB492
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_BB4445BD";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_BB4445BD
{
	Expression = "function void	Eval()

{
	Color *= ColorCoeff;
}";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_899248C4
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_568274D7";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_568274D7
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Ash_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_652E7374";
	SpawnCount = 2.0000000e+001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_4472746F
{
	Expression = "function void	Eval()

{
	Color *= ColorCoeff;
	Color2 = Color * float4(1,1,1,0.025);
}";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_34D9624A
{
	EnableSpawnerIDs = true;
	Renderer = "$LOCAL$/CParticleRenderer_Light_7D3129D5";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_DF0872BC",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_22566A2F";
	States = 
	{
		"$LOCAL$/CParticleState_710E2D1E",
	};
}
CParticleRenderer_Light	$LOCAL$/CParticleRenderer_Light_7D3129D5
{
	CustomName = "Light";
	BillboardingMaterial = Lighting_SplatPass_Spec;
	ConstantRadius = 1.0000000e+001;
	LightIntensityMultiplier = 1.0000000e+001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_DF0872BC
{
	FieldName = "Color";
	FieldType = float4;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_22566A2F
{
	Expression = "function void	Eval()
{
	Life = 0.5;
	Position = float3(0,1,0);
	Size = 1;
}
";
}
CParticleState	$LOCAL$/CParticleState_710E2D1E
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_EC91A339",
		"$LOCAL$/CParticleEvolver_Field_835FF5F0",
		"$LOCAL$/CParticleEvolver_Script_7D2AE2D5",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_EC91A339
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_835FF5F0
{
	CustomName = "Field";
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_9399D373";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_9399D373
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		0.0000000e+000,
		1.0000000e+000,
		5.0000000e-001,
		0.0000000e+000,
		1.0000000e+000,
		1.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.4511621e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Light_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_34D9624A";
	SpawnCountMode = TotalParticleCount;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_C06E80CB
{
	EnableSpawnerIDs = true;
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_045279EA";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_8A2E49F5",
		"$LOCAL$/CParticleFieldDeclaration_E4DE055C",
		"$LOCAL$/CParticleFieldDeclaration_7D5C214F",
		"$LOCAL$/CParticleFieldDeclaration_0DBCA2BE",
		"$LOCAL$/CParticleFieldDeclaration_50207959",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_B3AE7690";
	States = 
	{
		"$LOCAL$/CParticleState_D2F41093",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_045279EA
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/vfx_circle_fb2x2_01.dds";
	AtlasDefinition = "AtlasDefinitions/atlasDef_2x2.pkat";
	SoftAnimationBlending = true;
	BillboardMode = PlanarAlignedQuad;
	AxisField = "AxisAlign";
	Axis2Field = "AxisNormal";
	AxisScale = 1.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8A2E49F5
{
	FieldName = "AxisAlign";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E4DE055C
{
	FieldName = "AxisNormal";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_7D5C214F
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0DBCA2BE
{
	FieldName = "SizeCoeff";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_3EE94BBA
{
	Renderer = "$LOCAL$/CParticleRenderer_List_21D19805";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_6A6C438E",
		"$LOCAL$/CParticleFieldDeclaration_B7554269",
		"$LOCAL$/CParticleFieldDeclaration_12FF6CE0",
		"$LOCAL$/CParticleFieldDeclaration_8D921D23",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_70ADA122",
		"$LOCAL$/CParticleSamplerShape_F060658D",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_7D6F3227";
	States = 
	{
		"$LOCAL$/CParticleState_11CA1876",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_21D19805
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_AF4D64AC",
		"$LOCAL$/CParticleRenderer_Billboard_ADD44ADF",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_AF4D64AC
{
	CustomName = "Billboard";
	Diffuse = "Textures/PrestigeStar.dds";
	BillboardMode = VelocityAxisAligned;
	AxisScale = 5.0000001e-002;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_ADD44ADF
{
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03.dds";
	SizeField = "Size2";
	ColorField = "Color2";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6A6C438E
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B7554269
{
	FieldName = "Size2";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_12FF6CE0
{
	FieldName = "Color2";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8D921D23
{
	FieldName = "ColorCoeff";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_70ADA122
{
	SamplerName = "Sampler_0";
	Strength = 1.7677670e+000;
	Octaves = 1;
	Gain = 1.0000000e+000;
	TimeScale = 5.0000000e-001;
	FastFakeFlow = true;
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_F060658D
{
	SamplerName = "Shape_0";
	Shape = "$LOCAL$/CShapeDescriptor_B65DFCD4";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_B65DFCD4
{
	ShapeType = SPHERE;
	Radius = 5.0000000e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7D6F3227
{
	Expression = "function void	Eval()

{
	Life = rand(1,2);
	Size = rand(0.02, 0.04);
	Size2 = Size * 10;
	Velocity = float3(rand(-1,1),rand(0,1.25),rand(-1,1)) * rand(10,15);
	ScalarRotationSpeed = rand(-1,1);
	Position = Shape_0.samplePosition();
}";
}
CParticleState	$LOCAL$/CParticleState_11CA1876
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_7033C571",
		"$LOCAL$/CParticleEvolver_Rotation_5AFE1D8A",
		"$LOCAL$/CParticleEvolver_Damper_59CAE615",
		"$LOCAL$/CParticleEvolver_Script_D5CAC3FC",
		"$LOCAL$/CParticleEvolver_Field_7539E45E",
		"$LOCAL$/CParticleEvolver_Script_91391B2F",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_7033C571
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, 2.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Sampler_0";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_5AFE1D8A
{
	CustomName = "Rotation";
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_59CAE615
{
	CustomName = "Damper";
	MinSpeed = 5.0000000e-001;
	ExpDampingTime = 5.5000000e+000;
	FieldToDampen = "Velocity";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_D5CAC3FC
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_4472746F";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_42633421
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_199EE4F8";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_D9A46B1B",
		"$LOCAL$/CParticleFieldDeclaration_BF7E8A7A",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_E71C5DC5",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_C972329F";
	States = 
	{
		"$LOCAL$/CParticleState_82A8664E",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_199EE4F8
{
	DrawOrder = 1;
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend_Soft;
	Diffuse = "Textures/BeatleJewel.dds";
	SoftAnimationBlending = true;
	SoftnessDistance = 2.0000000e+000;
	BillboardMode = VelocitySpheroidalAlign;
	VFlipUVs = true;
	AxisScale = 2.5000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D9A46B1B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_BF7E8A7A
{
	FieldName = "ColorCoeff";
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_E71C5DC5
{
	SamplerName = "Sampler_0";
	Shape = "$LOCAL$/CShapeDescriptor_F028BD6C";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_F028BD6C
{
	ShapeType = SPHERE;
	Radius = 3.0000001e-001;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C972329F
{
	Expression = "function void	Eval()
{
	Life = rand(0.5,0.85);
	Size = rand(0.8,1.9);
	Rotation = rand(-pi,pi);
	ScalarRotationSpeed = rand(-0.25,0.25);
	Position = Sampler_0.samplePosition();
	Velocity = float3(rand(-5,5),rand(0,5),rand(-5,5)) * 3.5;
}
";
}
CParticleState	$LOCAL$/CParticleState_82A8664E
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_1C1EBC29",
		"$LOCAL$/CParticleEvolver_FlipBook_B92589A0",
		"$LOCAL$/CParticleEvolver_Damper_F33018E3",
		"$LOCAL$/CParticleEvolver_Rotation_A02167E2",
		"$LOCAL$/CParticleEvolver_Field_805F01E7",
		"$LOCAL$/CParticleEvolver_Script_640DE731",
		"$LOCAL$/CParticleEvolver_Field_91F091AB",
		"$LOCAL$/CParticleEvolver_Script_87A33473",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_1C1EBC29
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -5.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_FlipBook	$LOCAL$/CParticleEvolver_FlipBook_B92589A0
{
	CustomName = "FlipBook";
	LastFrameID = 24;
}
CParticleEvolver_Damper	$LOCAL$/CParticleEvolver_Damper_F33018E3
{
	CustomName = "Damper";
	MinSpeed = 2.5000000e-001;
	ExpDampingTime = 5.0000000e+000;
	FieldToDampen = "Velocity";
}
CParticleEvolver_Rotation	$LOCAL$/CParticleEvolver_Rotation_A02167E2
{
	CustomName = "Rotation";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_805F01E7
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_614A4336";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_614A4336
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		2.0000000e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_640DE731
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_CA470D48";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_CA470D48
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_91F091AB
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_6F636C4A";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6F636C4A
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		5.0000000e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Lava_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_42633421";
	SpawnCount = 2.5000000e+001;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_6128E19F
{
	SamplerName = "Curve_1";
	ValueType = Float3;
	Interpolator = Linear;
	Times = 
	{
		0.0000000e+000,
		2.7766120e-001,
		3.0205205e-001,
		3.4843531e-001,
		5.8928537e-001,
		6.5161443e-001,
		6.6596043e-001,
		7.4857950e-001,
		7.9553187e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.2352942e-001,
		4.9411768e-001,
		2.3529410e-002,
		9.8431373e-001,
		6.7843145e-001,
		3.1372551e-002,
		1.0000000e+000,
		7.9607844e-001,
		2.7058828e-001,
		5.4509819e-001,
		1.7254902e-001,
		7.2156864e-001,
		5.5501205e-001,
		1.7437525e-001,
		7.2313398e-001,
		6.9411778e-001,
		2.0000000e-001,
		7.4509805e-001,
		9.2016929e-001,
		2.2605163e-001,
		6.5350252e-001,
		9.5294118e-001,
		2.5490198e-001,
		5.0196064e-001,
		1.6862744e-001,
		8.1176472e-001,
		7.3725498e-001,
		3.1372553e-001,
		9.1764706e-001,
		7.9215682e-001,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_673D414E
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_FE973329
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_673D414E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E71217E3
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_A33BCCA0";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_B0AD9A4D
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_C39BD2E2";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D724F094
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((1-LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,5*cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_9A4350E7
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D724F094";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36
{
	Expression = "function void	Eval()
{
	float Offset = 0.250;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_34FEFE31
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_D6CD3E36";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B1F27048
{
	Expression = "function void	Eval()
{
	float Offset = 0.250;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_7A7E30AB
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_B1F27048";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_2921F74A
{
	Expression = "function void	Eval()
{
	float Offset = 0.0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_7D2AE2D5
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_2921F74A";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E2381FBC
{
	Expression = "function void	Eval()
{
	float Offset = 0.750;
	float Scale = 0.25;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_91391B2F
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E2381FBC";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_405E321E
{
	Expression = "function void	Eval()
{
	float Offset = 0.250;
	float Scale = 0.75;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_876F8C39
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_405E321E";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0
{
	Expression = "function void	Eval()
{
	float Offset = 0;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((1-LifeRatio*Scale)-Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,cos(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_87A33473
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7C2F92F0";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6128E19F
{
	Renderer = "$LOCAL$/CParticleRenderer_List_673D414E";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FE973329",
		"$LOCAL$/CParticleFieldDeclaration_A33BCCA0",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_E71217E3";
	States = 
	{
		"$LOCAL$/CParticleState_C39BD2E2",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_673D414E
{
	DrawOrder = 1;
	CustomName = "Billboard";
	BillboardingMaterial = Additive_Soft;
	Diffuse = "Textures/PrestigeStar.dds";
	SoftnessDistance = 2.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE973329
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A33BCCA0
{
	FieldName = "ColorCoeff";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E71217E3
{
	Expression = "function void	Eval()
{
	Life = 0.4;
}
";
}
CParticleState	$LOCAL$/CParticleState_C39BD2E2
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_B0AD9A4D",
		"$LOCAL$/CParticleEvolver_Field_D724F094",
		"$LOCAL$/CParticleEvolver_Field_B1F27048",
		"$LOCAL$/CParticleEvolver_Script_2921F74A",
		"$LOCAL$/CParticleEvolver_Script_E2381FBC",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B0AD9A4D
{
	CustomName = "Physics";
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_D724F094
{
	CustomName = "Field";
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_9A4350E7";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_9A4350E7
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		5.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_B1F27048
{
	CustomName = "Field";
	Name = "ColorCoeff";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_7A7E30AB";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_7A7E30AB
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		8.0000000e+000,
		4.8483515e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		-1.4319118e+001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_2921F74A
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_7D2AE2D5
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
	Size2 = Size *2*LifeRatio;
}
";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_E2381FBC
{
	CustomName = "Color";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_91391B2F";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_91391B2F
{
	Expression = "function void	Eval()
{
	float Offset = 0.250;
	float Scale = 0.5;
	float3 RGB = Curve_1.sample((LifeRatio*Scale)+Offset);
	RGB = rgb2hsv(RGB);
	RGB *= float3(1,0.9,2*sin(LifeRatio*pi*0.5));
	RGB = hsv2rgb(RGB);
	float4 ColorOut = float4(RGB,cos(LifeRatio*pi*0.5));//ColorCoeff;
	Color = ColorOut ;
	
	
	// ++++++++++++++++++++++ HELPER CODE ++++++++++++++++++++++++++++++++++++++++++++++++++
	// fast.linear2srgb(c) - converts the input color \'c\' from linear space to sRGB space.
	// rgb2hsv(c)
	// hsv2rgb(c)
	// bias(x, e) - bias(x, e) de-linearizes the input \'x\' by applying a power function based on value \'e\'. x is expected to be in the [0,1] range, e has to be in the [-1,1] range.
	// smoothlerp(a,b,t) - EX: pt01 = Curve_1.sample(0,0.1) pt02 = Curve_1.sample(1,0.5) => smoothlerp(pt0,pt1,LifeRatio)
	// smoothstep(a,b,x) - smoothstep function. smoothly evaluates between 0 to 1 the position of x between a and b.
	// https://wiki.popcornfx.com/index.php?title=Scripting_reference_2000#Particle_spawn_and_evolve_scripts
	
}";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Layer_1
{
	Descriptor = "$LOCAL$/CParticleDescriptor_6128E19F";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_6128E19F
{
	DrawOrder = 1;
	CustomName = "Billboard";
	Diffuse = "Textures/vfx_circle_03_alpha.dds";
	SoftnessDistance = 2.0000000e+000;
	SizeField = "Size2";
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_673D414E
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_673D414E",
		"$LOCAL$/CParticleRenderer_Billboard_6128E19F",
	};
}
